{
  "sql": {
    "easy": [
      {"id": "sql_easy_001", "question": "Which SQL statement is used to extract data from a database?", "options": ["SELECT", "EXTRACT", "GET", "OPEN"], "correct": 0, "tip": "SELECT is the fundamental statement for querying data."},
      {"id": "sql_easy_002", "question": "Which clause is used to filter records in SQL?", "options": ["WHERE", "IF", "HAVING", "FILTER"], "correct": 0, "tip": "WHERE filters rows before grouping."},
      {"id": "sql_easy_003", "question": "Which keyword is used to sort the result-set in SQL?", "options": ["ORDER BY", "SORT", "GROUP BY", "ARRANGE"], "correct": 0, "tip": "ORDER BY is used to sort records."},
      {"id": "sql_easy_004", "question": "What symbol is used in SQL to indicate all columns?", "options": ["*", "#", "%", "@"], "correct": 0, "tip": "Asterisk (*) selects all columns."},
      {"id": "sql_easy_005", "question": "Which SQL clause is used to remove duplicate records?", "options": ["DISTINCT", "UNIQUE", "DIFFERENT", "ONLY"], "correct": 0, "tip": "DISTINCT eliminates duplicates."},
      {"id": "sql_easy_006", "question": "What does SQL stand for?", "options": ["Structured Query Language", "Sequential Query Language", "Simple Query Language", "Standard Query Logic"], "correct": 0, "tip": "SQL = Structured Query Language."},
      {"id": "sql_easy_007", "question": "Which function returns the number of rows?", "options": ["COUNT()", "SUM()", "TOTAL()", "NUMBER()"], "correct": 0, "tip": "COUNT() counts rows."},
      {"id": "sql_easy_008", "question": "Which SQL statement is used to insert data?", "options": ["INSERT", "ADD", "PUT", "CREATE"], "correct": 0, "tip": "INSERT adds new records."},
      {"id": "sql_easy_009", "question": "Which clause is used to group rows?", "options": ["GROUP BY", "ORDER BY", "CLUSTER", "BATCH"], "correct": 0, "tip": "GROUP BY groups records by column."},
      {"id": "sql_easy_010", "question": "Which SQL keyword is used to delete all records from a table?", "options": ["DELETE", "REMOVE", "DROP", "ERASE"], "correct": 0, "tip": "DELETE removes rows but keeps the table."},
      {"id": "sql_easy_011", "question": "Which SQL operator is used to compare two values for equality?", "options": ["=", "==", "EQUAL", "IS"], "correct": 0, "tip": "= is used for comparison."},
      {"id": "sql_easy_012", "question": "Which SQL clause is used to rename a column or table?", "options": ["AS", "RENAME", "CHANGE", "SET"], "correct": 0, "tip": "AS gives an alias."},
      {"id": "sql_easy_013", "question": "Which keyword is used to create a new database?", "options": ["CREATE DATABASE", "NEW DATABASE", "MAKE DB", "ADD DB"], "correct": 0, "tip": "CREATE DATABASE defines a new DB."},
      {"id": "sql_easy_014", "question": "Which SQL function finds the largest value?", "options": ["MAX()", "HIGH()", "TOP()", "GREATEST()"], "correct": 0, "tip": "MAX() returns the maximum."},
      {"id": "sql_easy_015", "question": "What does NULL represent in SQL?", "options": ["Missing or unknown", "Zero", "Empty string", "False"], "correct": 0, "tip": "NULL means no value present."},
      {"id": "sql_easy_016", "question": "Which SQL clause specifies the table for SELECT?", "options": ["FROM", "INTO", "WITH", "USING"], "correct": 0, "tip": "FROM defines the source table."},
      {"id": "sql_easy_017", "question": "Which operator checks if a value is among a list?", "options": ["IN", "ANY", "EACH", "MATCH"], "correct": 0, "tip": "IN compares with a set of values."},
      {"id": "sql_easy_018", "question": "Which clause is used with ORDER BY to sort descending?", "options": ["DESC", "DOWN", "REVERSE", "BACK"], "correct": 0, "tip": "DESC sorts in descending order."},
      {"id": "sql_easy_019", "question": "Which SQL statement removes a table completely?", "options": ["DROP", "DELETE", "REMOVE", "ERASE"], "correct": 0, "tip": "DROP deletes table structure & data."},
      {"id": "sql_easy_020", "question": "Which SQL keyword is used to change existing data?", "options": ["UPDATE", "MODIFY", "CHANGE", "EDIT"], "correct": 0, "tip": "UPDATE modifies data."},
      {"id": "sql_easy_021", "question": "Which SQL statement adds a new column to an existing table?", "options": ["ALTER TABLE ADD COLUMN", "ADD COLUMN", "MODIFY COLUMN", "INSERT COLUMN"], "correct": 0, "tip": "ALTER TABLE is used for schema changes."},
      {"id": "sql_easy_022", "question": "Which operator is used for pattern matching in SQL?", "options": ["LIKE", "MATCH", "CONTAINS", "PATTERN"], "correct": 0, "tip": "LIKE is used with wildcards."},
      {"id": "sql_easy_023", "question": "Which SQL command is used to grant permissions to users?", "options": ["GRANT", "ALLOW", "PERMIT", "AUTHORIZE"], "correct": 0, "tip": "GRANT assigns privileges."},
      {"id": "sql_easy_024", "question": "Which SQL command is used to remove permissions from users?", "options": ["REVOKE", "DENY", "REMOVE", "PROHIBIT"], "correct": 0, "tip": "REVOKE removes privileges."},
      {"id": "sql_easy_025", "question": "What is the primary key in a table?", "options": ["A unique identifier for each record", "A foreign key", "An index", "A field that can be null"], "correct": 0, "tip": "Primary key uniquely identifies rows."},
      {"id": "sql_easy_026", "question": "Which SQL constraint ensures all values in a column are different?", "options": ["UNIQUE", "PRIMARY KEY", "NOT NULL", "DISTINCT"], "correct": 0, "tip": "UNIQUE ensures uniqueness across rows."},
      {"id": "sql_easy_027", "question": "Which SQL constraint ensures a column cannot have a NULL value?", "options": ["NOT NULL", "NO NULL", "MANDATORY", "REQUIRED"], "correct": 0, "tip": "NOT NULL prevents null entries."},
      {"id": "sql_easy_028", "question": "Which SQL keyword is used to combine the result-set of two or more SELECT statements?", "options": ["UNION", "JOIN", "COMBINE", "MERGE"], "correct": 0, "tip": "UNION combines result sets."},
      {"id": "sql_easy_029", "question": "Which SQL function calculates the average value of a numeric column?", "options": ["AVG()", "AVERAGE()", "MEAN()", "CALC_AVG()"], "correct": 0, "tip": "AVG() calculates the average."},
      {"id": "sql_easy_030", "question": "Which SQL function calculates the sum of a numeric column?", "options": ["SUM()", "TOTAL()", "ADD()", "ACCUMULATE()"], "correct": 0, "tip": "SUM() calculates the total."},
      {"id": "sql_easy_031", "question": "Which SQL statement is used to create a view?", "options": ["CREATE VIEW", "MAKE VIEW", "BUILD VIEW", "DEFINE VIEW"], "correct": 0, "tip": "CREATE VIEW defines a virtual table."},
      {"id": "sql_easy_032", "question": "What is a foreign key?", "options": ["A key that links two tables", "A primary key", "An index", "A unique identifier within a single table"], "correct": 0, "tip": "Foreign key links records between tables."},
      {"id": "sql_easy_033", "question": "Which SQL clause is used to retrieve a limited number of records?", "options": ["LIMIT", "TOP", "FETCH", "ROWNUM"], "correct": 0, "tip": "LIMIT restricts result set size."},
      {"id": "sql_easy_034", "question": "Which operator tests for the absence of a value?", "options": ["IS NULL", "NULL", "EXISTS NULL", "HAS NO VALUE"], "correct": 0, "tip": "IS NULL checks for null values."},
      {"id": "sql_easy_035", "question": "Which operator tests for the presence of a value?", "options": ["IS NOT NULL", "NOT NULL", "EXISTS VALUE", "HAS VALUE"], "correct": 0, "tip": "IS NOT NULL checks for non-null values."},
      {"id": "sql_easy_036", "question": "Which SQL command is used to define an index?", "options": ["CREATE INDEX", "ADD INDEX", "BUILD INDEX", "DEFINE INDEX"], "correct": 0, "tip": "CREATE INDEX improves query performance."},
      {"id": "sql_easy_037", "question": "What does DDL stand for?", "options": ["Data Definition Language", "Data Description Language", "Database Design Language", "Data Dictionary Language"], "correct": 0, "tip": "DDL deals with database schema."},
      {"id": "sql_easy_038", "question": "What does DML stand for?", "options": ["Data Manipulation Language", "Data Management Language", "Database Modification Language", "Data Movement Language"], "correct": 0, "tip": "DML deals with data manipulation."},
      {"id": "sql_easy_039", "question": "Which SQL command is used to commit a transaction?", "options": ["COMMIT", "SAVE", "APPLY", "FINALIZE"], "correct": 0, "tip": "COMMIT makes changes permanent."},
      {"id": "sql_easy_040", "question": "Which SQL command is used to undo a transaction?", "options": ["ROLLBACK", "UNDO", "REVERT", "CANCEL"], "correct": 0, "tip": "ROLLBACK reverts changes."},
      {"id": "sql_easy_041", "question": "What is a JOIN in SQL?", "options": ["Combining rows from two or more tables", "Filtering data", "Sorting data", "Aggregating data"], "correct": 0, "tip": "JOINs link tables based on related columns."},
      {"id": "sql_easy_042", "question": "Which JOIN returns only the rows that have a match in both tables?", "options": ["INNER JOIN", "LEFT JOIN", "RIGHT JOIN", "FULL OUTER JOIN"], "correct": 0, "tip": "INNER JOIN returns matching rows."},
      {"id": "sql_easy_043", "question": "Which JOIN returns all rows from the left table, and the matching rows from the right table?", "options": ["LEFT JOIN", "INNER JOIN", "RIGHT JOIN", "FULL OUTER JOIN"], "correct": 0, "tip": "LEFT JOIN prioritizes the left table."},
      {"id": "sql_easy_044", "question": "Which JOIN returns all rows from the right table, and the matching rows from the left table?", "options": ["RIGHT JOIN", "INNER JOIN", "LEFT JOIN", "FULL OUTER JOIN"], "correct": 0, "tip": "RIGHT JOIN prioritizes the right table."},
      {"id": "sql_easy_045", "question": "What is a subquery?", "options": ["A query nested inside another query", "A query that returns multiple result sets", "A query used for aggregation", "A temporary table"], "correct": 0, "tip": "Subqueries can be used in WHERE, FROM, or SELECT clauses."},
      {"id": "sql_easy_046", "question": "Which SQL function is used to convert a value to uppercase?", "options": ["UPPER()", "UCASE()", "TO_UPPER()", "CAPS()"], "correct": 0, "tip": "UPPER() converts to uppercase."},
      {"id": "sql_easy_047", "question": "Which SQL function is used to convert a value to lowercase?", "options": ["LOWER()", "LCASE()", "TO_LOWER()", "SMALLS()"], "correct": 0, "tip": "LOWER() converts to lowercase."},
      {"id": "sql_easy_048", "question": "Which SQL function returns the length of a string?", "options": ["LENGTH()", "LEN()", "SIZE()", "COUNT_CHARS()"], "correct": 0, "tip": "LENGTH() or LEN() depends on the SQL dialect."},
      {"id": "sql_easy_049", "question": "What does AUTO_INCREMENT do?", "options": ["Generates a unique number for new records", "Increments a value manually", "Adds a column automatically", "Increments all values in a column"], "correct": 0, "tip": "AUTO_INCREMENT is often used for primary keys."},
      {"id": "sql_easy_050", "question": "Which SQL command is used to add a column to an existing table?", "options": ["ALTER TABLE ADD COLUMN", "ADD COLUMN", "MODIFY COLUMN", "INSERT COLUMN"], "correct": 0, "tip": "This is a common DDL operation."},
      {"id": "sql_easy_051", "question": "Which SQL command is used to modify an existing column's data type?", "options": ["ALTER TABLE MODIFY COLUMN", "MODIFY COLUMN", "CHANGE COLUMN", "UPDATE COLUMN"], "correct": 0, "tip": "ALTER TABLE is versatile for schema changes."},
      {"id": "sql_easy_052", "question": "Which SQL command is used to drop a column from a table?", "options": ["ALTER TABLE DROP COLUMN", "DROP COLUMN", "DELETE COLUMN", "REMOVE COLUMN"], "correct": 0, "tip": "Dropping a column removes it and its data."},
      {"id": "sql_easy_053", "question": "What is the purpose of a transaction in SQL?", "options": ["To ensure data integrity and consistency", "To speed up queries", "To create backups", "To define table structures"], "correct": 0, "tip": "Transactions are atomic units of work."},
      {"id": "sql_easy_054", "question": "Which SQL operator is used to negate a condition?", "options": ["NOT", "NONE", "EXCEPT", "UNLESS"], "correct": 0, "tip": "NOT reverses the boolean value of a condition."},
      {"id": "sql_easy_055", "question": "Which SQL operator combines two or more conditions, and all must be true?", "options": ["AND", "OR", "BOTH", "PLUS"], "correct": 0, "tip": "AND requires all conditions to be met."},
      {"id": "sql_easy_056", "question": "Which SQL operator combines two or more conditions, and at least one must be true?", "options": ["OR", "AND", "EITHER", "ANY"], "correct": 0, "tip": "OR requires at least one condition to be met."},
      {"id": "sql_easy_057", "question": "Which SQL clause is used to set conditions for groups?", "options": ["HAVING", "WHERE", "GROUP BY", "FILTER"], "correct": 0, "tip": "HAVING filters on aggregated results."},
      {"id": "sql_easy_058", "question": "What is an alias in SQL?", "options": ["A temporary name for a table or column", "A permanent name for a table", "A data type", "A type of index"], "correct": 0, "tip": "Aliases make queries more readable."},
      {"id": "sql_easy_059", "question": "Which SQL keyword is used to retrieve only unique values from a column?", "options": ["DISTINCT", "UNIQUE", "DIFFERENT", "ONLY"], "correct": 0, "tip": "DISTINCT is commonly used with SELECT."},
      {"id": "sql_easy_060", "question": "What is the result of a SELECT statement without a FROM clause?", "options": ["Depends on the SQL dialect, often returns a single row constant", "An error", "All tables in the database", "All columns in the database"], "correct": 0, "tip": "Some SQL dialects allow this for scalar expressions or system functions."}
    ],
    "medium": [
      {"id": "sql_medium_001", "question": "Which clause filters groups created by GROUP BY?", "options": ["HAVING", "WHERE", "FILTER", "LIMIT"], "correct": 0, "tip": "HAVING is used after GROUP BY."},
      {"id": "sql_medium_002", "question": "What type of join returns all rows from both tables, matching where possible?", "options": ["FULL OUTER JOIN", "INNER JOIN", "LEFT JOIN", "RIGHT JOIN"], "correct": 0, "tip": "FULL OUTER JOIN combines all rows."},
      {"id": "sql_medium_003", "question": "What does the BETWEEN operator do?", "options": ["Filters within a range", "Compares two tables", "Checks equality", "Joins two tables"], "correct": 0, "tip": "BETWEEN filters between two values."},
      {"id": "sql_medium_004", "question": "Which aggregate function ignores NULL values by default?", "options": ["AVG()", "COUNT()", "SUM()", "All of the above"], "correct": 3, "tip": "Most aggregate functions ignore NULLs unless specified."},
      {"id": "sql_medium_005", "question": "What is the difference between TRUNCATE and DELETE?", "options": ["TRUNCATE resets identity, DELETE doesn't; TRUNCATE is DDL, DELETE is DML", "DELETE is faster than TRUNCATE", "TRUNCATE can be rolled back, DELETE cannot", "TRUNCATE removes the table, DELETE only rows"], "correct": 0, "tip": "TRUNCATE is a DDL command and faster for clearing all rows."},
      {"id": "sql_medium_006", "question": "What is a self-join?", "options": ["A join of a table with itself", "A join without a join condition", "A join using only one table", "A join that combines data from different databases"], "correct": 0, "tip": "Self-joins are useful for hierarchical data or comparisons within the same table."},
      {"id": "sql_medium_007", "question": "What is the purpose of an index in SQL?", "options": ["To speed up data retrieval", "To enforce data integrity", "To define relationships between tables", "To store data in a compressed format"], "correct": 0, "tip": "Indexes create a lookup structure for faster access."},
      {"id": "sql_medium_008", "question": "What is a UNION ALL operator?", "options": ["Combines results of two SELECT statements, including duplicates", "Combines results, excluding duplicates", "Performs an inner join", "Performs a full outer join"], "correct": 0, "tip": "UNION ALL is faster than UNION as it skips duplicate removal."},
      {"id": "sql_medium_009", "question": "How do you handle NULL values in aggregate functions like SUM or AVG if you want them to be treated as zero?", "options": ["Using COALESCE or ISNULL", "They are automatically treated as zero", "It's not possible", "Using a WHERE clause to filter them out"], "correct": 0, "tip": "COALESCE and ISNULL replace NULL with a specified value."},
      {"id": "sql_medium_010", "question": "What is the difference between a primary key and a unique key?", "options": ["A table can have only one primary key but multiple unique keys; primary key cannot be NULL, unique key can be NULL", "Primary key can be NULL, unique key cannot be NULL", "They are interchangeable", "Unique key defines table relationships, primary key doesn't"], "correct": 0, "tip": "Primary key is a specific type of unique key that uniquely identifies each record and cannot contain NULL values."},
      {"id": "sql_medium_011", "question": "What is a view in SQL?", "options": ["A virtual table based on the result-set of an SQL statement", "A temporary table", "A physical copy of a table", "An index on a table"], "correct": 0, "tip": "Views simplify complex queries and provide data security."},
      {"id": "sql_medium_012", "question": "What is the purpose of a stored procedure?", "options": ["To encapsulate SQL statements for reuse and performance", "To define table schemas", "To manage user permissions", "To create database backups"], "correct": 0, "tip": "Stored procedures can improve performance and security."},
      {"id": "sql_medium_013", "question": "What is a trigger in SQL?", "options": ["A special type of stored procedure that automatically runs when an event occurs in the database", "A database backup mechanism", "A function for data aggregation", "A tool for creating indexes"], "correct": 0, "tip": "Triggers are used for auditing, enforcing business rules, etc."},
      {"id": "sql_medium_014", "question": "Explain ACID properties in database transactions.", "options": ["Atomicity, Consistency, Isolation, Durability", "Accuracy, Consistency, Integrity, Durability", "Atomicity, Clarity, Isolation, Distribution", "Availability, Concurrency, Integrity, Data"], "correct": 0, "tip": "ACID ensures reliable transaction processing."},
      {"id": "sql_medium_015", "question": "What is normalization in database design?", "options": ["Organizing the columns and tables to minimize data redundancy", "Optimizing query performance", "Creating indexes", "Adding new tables to the database"], "correct": 0, "tip": "Normalization aims to reduce data anomalies."},
      {"id": "sql_medium_016", "question": "What is denormalization?", "options": ["Intentionally adding redundant data to a database for performance optimization", "The process of removing redundant data", "Breaking down tables into smaller ones", "Creating more complex table relationships"], "correct": 0, "tip": "Denormalization is often used in data warehousing."},
      {"id": "sql_medium_017", "question": "What is a composite primary key?", "options": ["A primary key consisting of two or more columns", "A primary key that is also a foreign key", "A primary key that allows NULL values", "A primary key with multiple indexes"], "correct": 0, "tip": "Composite keys are used when a single column isn't enough to uniquely identify a record."},
      {"id": "sql_medium_018", "question": "How do you retrieve the current date and time in SQL?", "options": ["GETDATE() or NOW() (depends on DB)", "CURRENT_DATE()", "DATE_NOW()", "TODAY()"], "correct": 0, "tip": "Function names vary across different SQL databases."},
      {"id": "sql_medium_019", "question": "What is a wildcard character in SQL and when is it used?", "options": ["A special character used with LIKE for pattern matching", "A character for sorting data", "A placeholder for numbers", "A character for joining tables"], "correct": 0, "tip": "Common wildcards are '%' (for zero or more characters) and '_' (for a single character)."},
      {"id": "sql_medium_020", "question": "What is the difference between WHERE and HAVING clauses?", "options": ["WHERE filters individual rows, HAVING filters groups", "WHERE is used after GROUP BY, HAVING before", "WHERE is for aggregates, HAVING is for individual columns", "There is no difference"], "correct": 0, "tip": "The order of execution is WHERE, then GROUP BY, then HAVING."},
      {"id": "sql_medium_021", "question": "What is a schema in SQL?", "options": ["A collection of database objects like tables, views, stored procedures", "A physical database file", "A type of index", "A data manipulation language command"], "correct": 0, "tip": "Schemas provide a logical grouping for database objects."},
      {"id": "sql_medium_022", "question": "How do you find the Nth highest salary in a table?", "options": ["Using a subquery with LIMIT/OFFSET or ROW_NUMBER()/DENSE_RANK()", "Using only ORDER BY", "Using a simple SELECT statement", "It's not possible with standard SQL"], "correct": 0, "tip": "Window functions or LIMIT/OFFSET are common approaches."},
      {"id": "sql_medium_023", "question": "What is a clustered index?", "options": ["An index that determines the physical order of data in a table", "An index that doesn't affect the physical order of data", "An index on multiple columns", "An index that allows duplicate values"], "correct": 0, "tip": "A table can only have one clustered index."},
      {"id": "sql_medium_024", "question": "What is a non-clustered index?", "options": ["An index that does not affect the physical order of data in a table", "An index that determines the physical order of data", "An index on a single column only", "An index that must be unique"], "correct": 0, "tip": "Non-clustered indexes are pointers to the actual data rows."},
      {"id": "sql_medium_025", "question": "What is the purpose of an EXPLAIN or DESCRIBE command?", "options": ["To show the execution plan of a query", "To list all tables in a database", "To describe table schema", "To analyze database performance"], "correct": 0, "tip": "These commands help in query optimization."}
    ],
    "hard": [
      {"id": "sql_hard_001", "question": "What is a correlated subquery?", "options": ["A subquery that depends on outer query", "Independent query", "Join of two subqueries", "Nested transaction"], "correct": 0, "tip": "Correlated subquery refers to outer query column."},
      {"id": "sql_hard_002", "question": "What is a CTE in SQL?", "options": ["Common Table Expression", "Custom Table Entity", "Complex Table Execution", "Concurrent Table Evaluation"], "correct": 0, "tip": "CTE is a temporary result set."},
      {"id": "sql_hard_003", "question": "What does the RANK() function do?", "options": ["Assigns rank with gaps", "Assigns sequential numbers", "Returns highest value", "Counts rows"], "correct": 0, "tip": "RANK() gives position with gaps."},
      {"id": "sql_hard_004", "question": "What is the difference between RANK() and DENSE_RANK()?", "options": ["DENSE_RANK() gives consecutive ranks without gaps, while RANK() leaves gaps", "RANK() handles ties differently", "DENSE_RANK() is faster", "There is no difference"], "correct": 0, "tip": "DENSE_RANK() assigns consecutive ranks for tied values."},
      {"id": "sql_hard_005", "question": "What is a window function in SQL?", "options": ["A function that performs a calculation across a set of table rows that are related to the current row", "A function for displaying data in a graphical window", "A function that aggregates data from multiple tables", "A function that operates only on a single row"], "correct": 0, "tip": "Window functions allow calculations over a defined 'window' of rows."},
      {"id": "sql_hard_006", "question": "Explain the concept of SQL injection and how to prevent it.", "options": ["A code injection technique that exploits vulnerabilities in an application's software, prevented by parameterized queries/prepared statements", "A method for faster data insertion", "A way to optimize database performance", "A type of database backup"], "correct": 0, "tip": "SQL injection can lead to unauthorized data access or manipulation."},
      {"id": "sql_hard_007", "question": "What is optimistic locking in databases?", "options": ["A strategy to prevent conflicts in concurrent transactions by checking if data has changed before committing", "A method to lock rows for exclusive access", "A type of database security measure", "A way to speed up writes to the database"], "correct": 0, "tip": "Optimistic locking assumes conflicts are rare and verifies at commit time."},
      {"id": "sql_hard_008", "question": "What is pessimistic locking in databases?", "options": ["A strategy to prevent conflicts in concurrent transactions by locking data before it's accessed or modified", "A method that allows multiple users to write to the same data simultaneously", "A way to slow down database operations", "A security measure that blocks all access"], "correct": 0, "tip": "Pessimistic locking prevents conflicts by acquiring locks upfront."},
      {"id": "sql_hard_009", "question": "What is a database cursor?", "options": ["A control structure that enables traversal over the records in a database", "A pointer to a specific table", "A graphical user interface element for databases", "A temporary storage area for query results"], "correct": 0, "tip": "Cursors are used for row-by-row processing, often less efficient than set-based operations."},
      {"id": "sql_hard_010", "question": "Explain the concept of CAP theorem in distributed databases.", "options": ["Consistency, Availability, Partition Tolerance", "Concurrency, Atomicity, Performance", "Client-server, Application, Protocol", "Centralization, Authorization, Privacy"], "correct": 0, "tip": "CAP theorem states that a distributed data store can only provide two of three guarantees."},
      {"id": "sql_hard_011", "question": "What is the purpose of the PIVOT and UNPIVOT operators?", "options": ["PIVOT rotates rows into columns, UNPIVOT rotates columns into rows", "They are used for joining tables", "They are for data encryption", "They are used for creating indexes"], "correct": 0, "tip": "PIVOT/UNPIVOT are useful for data transformation and reporting."},
      {"id": "sql_hard_012", "question": "Describe the difference between OLTP and OLAP.", "options": ["OLTP is for transactional processing, OLAP for analytical processing", "OLTP uses denormalized data, OLAP uses normalized data", "OLTP is for data warehousing, OLAP for real-time operations", "OLTP is faster than OLAP"], "correct": 0, "tip": "OLTP systems focus on day-to-day operations, OLAP on complex queries and reporting."},
      {"id": "sql_hard_013", "question": "What are recursive CTEs?", "options": ["CTEs that refer to themselves, allowing for hierarchical or graph traversals", "CTEs that call other CTEs", "CTEs that execute repeatedly", "CTEs that are used for data validation"], "correct": 0, "tip": "Recursive CTEs are powerful for navigating tree-like structures."},
      {"id": "sql_hard_014", "question": "What is a deadlock in a database and how can it be resolved?", "options": ["A situation where two or more transactions are waiting for each other to release locks, resolved by deadlock detection and rollback", "A performance bottleneck in queries", "A type of database corruption", "An error in table schema definition"], "correct": 0, "tip": "Deadlocks can lead to transaction timeouts and require intervention."},
      {"id": "sql_hard_015", "question": "What is sharding in databases?", "options": ["A method of horizontal partitioning data across multiple databases to improve scalability", "A way to encrypt data", "A technique for creating backups", "A type of database indexing"], "correct": 0, "tip": "Sharding distributes data to handle large datasets and high traffic."},
      {"id": "sql_hard_016", "question": "Explain the concept of eventual consistency in distributed databases.", "options": ["A consistency model where all replicas of a data item will eventually converge to the same value", "Immediate data consistency across all nodes", "Data is always inconsistent", "Only one replica holds the true data"], "correct": 0, "tip": "Eventual consistency is common in highly available distributed systems."},
      {"id": "sql_hard_017", "question": "What is a database snapshot?", "options": ["A read-only, static view of a database at a specific point in time", "A full backup of the database", "A real-time copy of the database", "A dynamic view that updates automatically"], "correct": 0, "tip": "Snapshots are useful for reporting or testing without affecting the live database."},
      {"id": "sql_hard_018", "question": "What is a materialized view?", "options": ["A database object that contains the results of a query and is stored as a physical table", "A virtual table that is computed on the fly", "A type of index", "A temporary table"], "correct": 0, "tip": "Materialized views can improve performance for complex, frequently queried data."},
      {"id": "sql_hard_019", "question": "Describe the concept of isolation levels in SQL transactions.", "options": ["Defines the degree to which one transaction's changes are visible to other concurrent transactions", "Refers to physical separation of databases", "Controls user access to data", "Determines network latency for database connections"], "correct": 0, "tip": "Common isolation levels include Read Uncommitted, Read Committed, Repeatable Read, and Serializable."},
      {"id": "sql_hard_020", "question": "What is data warehousing and its purpose?", "options": ["A system used for reporting and data analysis, and is a central repository for integrated data from one or more disparate sources", "A system for real-time transaction processing", "A tool for creating database backups", "A method for securing sensitive data"], "correct": 0, "tip": "Data warehouses support business intelligence activities."},
      {"id": "sql_hard_021", "question": "What is the difference between ROW_NUMBER(), RANK(), and DENSE_RANK()?", "options": ["ROW_NUMBER() assigns sequential unique numbers; RANK() assigns ranks with gaps for ties; DENSE_RANK() assigns consecutive ranks without gaps for ties.", "They are all interchangeable.", "ROW_NUMBER() is for aggregates, RANK() and DENSE_RANK() are for sorting.", "ROW_NUMBER() can only be used with primary keys."], "correct": 0, "tip": "These are essential window functions for ranking data."},
      {"id": "sql_hard_022", "question": "Explain the concept of idempotence in the context of SQL operations.", "options": ["An operation that produces the same result if executed multiple times with the same input", "An operation that must be executed only once", "An operation that always produces different results", "An operation that cannot be rolled back"], "correct": 0, "tip": "DELETE and UPDATE with specific WHERE clauses are typically idempotent."},
      {"id": "sql_hard_023", "question": "What is a distributed transaction?", "options": ["A transaction that involves multiple separate databases or resources", "A transaction that is performed on a single database but by multiple users", "A transaction that is spread across multiple tables within one database", "A transaction that is processed in parallel on a single machine"], "correct": 0, "tip": "Distributed transactions require a two-phase commit protocol."},
      {"id": "sql_hard_024", "question": "What is the purpose of `VACUUM` (or similar commands like `OPTIMIZE TABLE`) in databases?", "options": ["To reclaim storage space occupied by dead tuples and improve performance", "To backup the database", "To create new tables", "To add new columns to a table"], "correct": 0, "tip": "Essential for maintaining database health, especially in PostgreSQL and MySQL."},
      {"id": "sql_hard_025", "question": "How do you handle pagination in large SQL result sets?", "options": ["Using OFFSET and FETCH NEXT (or LIMIT in MySQL/PostgreSQL)", "Retrieving all data at once", "Using multiple SELECT statements", "Creating temporary tables for each page"], "correct": 0, "tip": "Pagination is crucial for efficient display of large datasets."}
    ]
  },
  "unix": {
    "easy": [
      {"id": "unix_easy_001", "question": "Which command is used to list files in a directory?", "options": ["ls", "dir", "list", "show"], "correct": 0, "tip": "ls is fundamental for directory listing."},
      {"id": "unix_easy_002", "question": "Which command is used to change directories?", "options": ["cd", "chdir", "goto", "move"], "correct": 0, "tip": "cd stands for change directory."},
      {"id": "unix_easy_003", "question": "Which command creates a new directory?", "options": ["mkdir", "make_dir", "newdir", "create_folder"], "correct": 0, "tip": "mkdir is short for make directory."},
      {"id": "unix_easy_004", "question": "Which command is used to display the current working directory?", "options": ["pwd", "currentdir", "whereami", "present"], "correct": 0, "tip": "pwd stands for print working directory."},
      {"id": "unix_easy_005", "question": "Which command is used to copy files?", "options": ["cp", "copy", "mv", "duplicate"], "correct": 0, "tip": "cp is the command for copying."},
      {"id": "unix_easy_006", "question": "Which command is used to move or rename files?", "options": ["mv", "move", "rename", "change"], "correct": 0, "tip": "mv handles both moving and renaming."},
      {"id": "unix_easy_007", "question": "Which command is used to remove files?", "options": ["rm", "delete", "erase", "remove"], "correct": 0, "tip": "rm is the command for removing."},
      {"id": "unix_easy_008", "question": "Which command is used to view the content of a file?", "options": ["cat", "view", "open", "display"], "correct": 0, "tip": "cat is short for concatenate, commonly used for viewing files."},
      {"id": "unix_easy_009", "question": "Which command shows the manual page for a command?", "options": ["man", "help", "info", "docs"], "correct": 0, "tip": "man displays the manual."},
      {"id": "unix_easy_010", "question": "Which command is used to search for files?", "options": ["find", "search", "locate", "grep"], "correct": 0, "tip": "find is used for searching files and directories."},
      {"id": "unix_easy_011", "question": "Which command is used to display disk usage?", "options": ["df", "du", "diskfree", "diskuse"], "correct": 0, "tip": "df shows disk space usage."},
      {"id": "unix_easy_012", "question": "Which command is used to display directory space usage?", "options": ["du", "df", "dirsize", "folderuse"], "correct": 0, "tip": "du summarizes disk usage of files and directories."},
      {"id": "unix_easy_013", "question": "Which command is used to change file permissions?", "options": ["chmod", "chown", "permissions", "setperm"], "correct": 0, "tip": "chmod changes file mode bits."},
      {"id": "unix_easy_014", "question": "Which command is used to change file ownership?", "options": ["chown", "chmod", "owner", "setowner"], "correct": 0, "tip": "chown changes file owner and group."},
      {"id": "unix_easy_015", "question": "Which command displays currently running processes?", "options": ["ps", "top", "process", "tasks"], "correct": 0, "tip": "ps lists running processes."},
      {"id": "unix_easy_016", "question": "Which command is used to terminate a process?", "options": ["kill", "stop", "terminate", "end"], "correct": 0, "tip": "kill sends a signal to a process."},
      {"id": "unix_easy_0017", "question": "Which command is used to view the end of a file?", "options": ["tail", "head", "end", "bottom"], "correct": 0, "tip": "tail shows the last part of files."},
      {"id": "unix_easy_018", "question": "Which command is used to view the beginning of a file?", "options": ["head", "tail", "start", "top"], "correct": 0, "tip": "head shows the first part of files."},
      {"id": "unix_easy_019", "question": "Which command is used to download files from the internet?", "options": ["wget", "curl", "download", "fetch"], "correct": 0, "tip": "wget is a non-interactive network downloader."},
      {"id": "unix_easy_020", "question": "Which command is used to extract contents of a tarball?", "options": ["tar -xf", "unzip", "extract", "untar"], "correct": 0, "tip": "tar is commonly used for archiving and extraction."},
      {"id": "unix_easy_021", "question": "Which command displays network configuration?", "options": ["ifconfig", "ipconfig", "netstat", "ip"], "correct": 0, "tip": "ifconfig (or `ip a` on newer systems) shows network interfaces."},
      {"id": "unix_easy_022", "question": "Which command is used to check network connectivity?", "options": ["ping", "netcheck", "testnet", "connect"], "correct": 0, "tip": "ping tests reachability of a host."},
      {"id": "unix_easy_023", "question": "Which command is used to log in as a superuser?", "options": ["su", "sudo", "root", "login"], "correct": 0, "tip": "su switches user, often to root."},
      {"id": "unix_easy_024", "question": "Which command is used to execute a command as another user (often root)?", "options": ["sudo", "su", "execas", "runas"], "correct": 0, "tip": "sudo allows a permitted user to execute a command as the superuser or another user."},
      {"id": "unix_easy_025", "question": "Which command is used to clear the terminal screen?", "options": ["clear", "cls", "reset", "erase"], "correct": 0, "tip": "clear cleans up the terminal display."},
      {"id": "unix_easy_026", "question": "Which command is used to display the system's hostname?", "options": ["hostname", "name", "sysname", "host"], "correct": 0, "tip": "hostname displays or sets the system's host name."},
      {"id": "unix_easy_027", "question": "Which command is used to display the current date and time?", "options": ["date", "time", "now", "datetime"], "correct": 0, "tip": "date command shows the system date and time."},
      {"id": "unix_easy_028", "question": "Which command is used to compare two files line by line?", "options": ["diff", "cmp", "compare", "check"], "correct": 0, "tip": "diff outputs the differences between two files."},
      {"id": "unix_easy_029", "question": "Which command is used to count lines, words, and characters in a file?", "options": ["wc", "count", "stats", "lines"], "correct": 0, "tip": "wc stands for word count."},
      {"id": "unix_easy_030", "question": "Which command is used to create an empty file?", "options": ["touch", "create", "mkfile", "newfile"], "correct": 0, "tip": "touch updates file timestamps, creating the file if it doesn't exist."},
      {"id": "unix_easy_031", "question": "Which command is used to display the process tree?", "options": ["pstree", "tree", "proctree", "pstack"], "correct": 0, "tip": "pstree shows running processes as a tree."},
      {"id": "unix_easy_032", "question": "Which command is used to display user information?", "options": ["whoami", "id", "who", "userinfo"], "correct": 0, "tip": "whoami prints the effective userid."},
      {"id": "unix_easy_033", "question": "Which command is used to create a symbolic link?", "options": ["ln -s", "link", "symlink", "createlink"], "correct": 0, "tip": "ln creates links between files."},
      {"id": "unix_easy_034", "question": "Which command is used to print arguments to standard output?", "options": ["echo", "print", "display", "output"], "correct": 0, "tip": "echo is commonly used in shell scripts."},
      {"id": "unix_easy_035", "question": "Which command is used to search for a string within files?", "options": ["grep", "findstr", "searchin", "textfind"], "correct": 0, "tip": "grep searches for patterns in files."},
      {"id": "unix_easy_036", "question": "Which command is used to schedule commands to be executed at a later time?", "options": ["at", "cron", "schedule", "later"], "correct": 0, "tip": "at runs commands once at a specified time."},
      {"id": "unix_easy_037", "question": "Which command is used to display system uptime and load average?", "options": ["uptime", "top", "stats", "sysinfo"], "correct": 0, "tip": "uptime shows how long the system has been running."},
      {"id": "unix_easy_038", "question": "Which command is used to compress files?", "options": ["gzip", "zip", "compress", "pack"], "correct": 0, "tip": "gzip is a popular compression utility."},
      {"id": "unix_easy_039", "question": "Which command is used to uncompress files compressed with gzip?", "options": ["gunzip", "unzip", "decompress", "unpack"], "correct": 0, "tip": "gunzip is the counterpart to gzip."},
      {"id": "unix_easy_040", "question": "Which command is used to execute a command repeatedly at fixed intervals?", "options": ["watch", "loop", "repeat", "monitor"], "correct": 0, "tip": "watch executes a command periodically."},
      {"id": "unix_easy_041", "question": "Which command lists contents of an archive?", "options": ["tar -tf", "lszip", "listtar", "showarchive"], "correct": 0, "tip": "The 't' option lists the contents of a tar archive."},
      {"id": "unix_easy_042", "question": "Which command is used to display routing table?", "options": ["netstat -r", "route", "ip route", "show routes"], "correct": 0, "tip": "netstat -r or `ip route` shows the IP routing table."},
      {"id": "unix_easy_043", "question": "Which command shows who is logged on?", "options": ["who", "w", "users", "logged"], "correct": 0, "tip": "who displays information about users currently logged in."},
      {"id": "unix_easy_044", "question": "Which command displays the current shell?", "options": ["echo $SHELL", "shellname", "currentshell", "getshell"], "correct": 0, "tip": "$SHELL is an environment variable."},
      {"id": "unix_easy_045", "question": "Which command is used to create a hard link?", "options": ["ln", "hardlink", "createlink", "link"], "correct": 0, "tip": "ln without -s creates a hard link."},
      {"id": "unix_easy_046", "question": "Which command is used to view running jobs?", "options": ["jobs", "bg", "fg", "tasks"], "correct": 0, "tip": "jobs lists active jobs in the current shell."},
      {"id": "unix_easy_047", "question": "Which command is used to bring a background job to the foreground?", "options": ["fg", "bg", "front", "resume"], "correct": 0, "tip": "fg brings a job to the foreground."},
      {"id": "unix_easy_048", "question": "Which command is used to send a job to the background?", "options": ["bg", "fg", "back", "pause"], "correct": 0, "tip": "bg sends a job to the background."},
      {"id": "unix_easy_049", "question": "Which command is used to display the calendar?", "options": ["cal", "calendar", "showcal", "datecal"], "correct": 0, "tip": "cal displays a calendar."},
      {"id": "unix_easy_050", "question": "Which command is used to concatenate files and print on the standard output?", "options": ["cat", "concat", "join", "merge"], "correct": 0, "tip": "cat is primarily for concatenating and displaying files."},
      {"id": "unix_easy_051", "question": "Which command is used to remove an empty directory?", "options": ["rmdir", "rm -r", "deldir", "removedir"], "correct": 0, "tip": "rmdir removes empty directories."},
      {"id": "unix_easy_052", "question": "Which command is used to list users currently logged in?", "options": ["w", "who", "users", "logged"], "correct": 0, "tip": "w shows who is logged on and what they are doing."},
      {"id": "unix_easy_053", "question": "Which command is used to display directory entries one per line?", "options": ["ls -1", "ls -l", "ls -a", "ls -d"], "correct": 0, "tip": "The '-1' option forces single-column output."},
      {"id": "unix_easy_054", "question": "Which command is used to display hidden files in a directory?", "options": ["ls -a", "ls -h", "ls -hidden", "ls -dot"], "correct": 0, "tip": "Files starting with '.' are hidden."},
      {"id": "unix_easy_055", "question": "Which command is used to safely shut down the system?", "options": ["shutdown", "reboot", "poweroff", "halt"], "correct": 0, "tip": "shutdown allows for timed shutdowns and messages."},
      {"id": "unix_easy_056", "question": "Which command is used to restart the system?", "options": ["reboot", "restart", "shutdown -r", "powercycle"], "correct": 0, "tip": "reboot initiates a system restart."},
      {"id": "unix_easy_057", "question": "Which command is used to display system architecture?", "options": ["arch", "uname -m", "cpuinfo", "hwinfo"], "correct": 0, "tip": "arch or `uname -m` displays machine hardware name."},
      {"id": "unix_easy_058", "question": "Which command is used to display kernel version?", "options": ["uname -r", "kernelver", "syskernel", "osversion"], "correct": 0, "tip": "`uname -r` shows kernel release."},
      {"id": "unix_easy_059", "question": "Which command is used to check free memory?", "options": ["free", "meminfo", "top", "vmstat"], "correct": 0, "tip": "free displays amount of free and used memory."},
      {"id": "unix_easy_060", "question": "Which command is used to display information about connected users?", "options": ["who", "users", "w", "finger"], "correct": 0, "tip": "who provides a list of logged-in users."}
    ],
    "medium": [
      {"id": "unix_medium_001", "question": "Which command is used to find information about running processes, including CPU and memory usage?", "options": ["top", "ps", "htop", "glances"], "correct": 0, "tip": "top provides a dynamic real-time view of running processes."},
      {"id": "unix_medium_002", "question": "Which command is used to safely edit files as root in a terminal?", "options": ["sudo vi", "su vi", "nano --root", "edit-root"], "correct": 0, "tip": "Using `sudo` with an editor ensures correct permissions."},
      {"id": "unix_medium_003", "question": "Which utility is used to securely copy files between hosts?", "options": ["scp", "ftp", "rcp", "sftp"], "correct": 0, "tip": "scp (secure copy) uses SSH for data transfer."},
      {"id": "unix_medium_004", "question": "Which command is used to display the routing table?", "options": ["ip route", "netstat -r", "route -n", "All of the above"], "correct": 3, "tip": "All these commands can show routing information, `ip route` is more modern."},
      {"id": "unix_medium_005", "question": "How do you create an archive and compress it using tar and gzip in one go?", "options": ["tar -czvf archive.tar.gz /path/to/files", "gzip archive.tar /path/to/files", "tar -cf archive.gz /path/to/files", "tar -zcf archive.tar.gz /path/to/files"], "correct": 0, "tip": "The 'z' option tells tar to use gzip compression."},
      {"id": "unix_medium_006", "question": "Which command is used to search for files based on their content?", "options": ["grep -r", "find -exec grep", "ack", "All of the above"], "correct": 3, "tip": "grep can search recursively, `find` can execute grep, and `ack` is a specialized tool."},
      {"id": "unix_medium_007", "question": "What is the purpose of the `chmod +x filename` command?", "options": ["To make the file executable", "To make the file readable", "To make the file writable", "To delete the file"], "correct": 0, "tip": "+x adds execute permission for owner, group, and others."},
      {"id": "unix_medium_008", "question": "Which command is used to send output of one command as input to another?", "options": ["pipe (|)", "redirect (>)", "append (>>)", "chain (&&)"], "correct": 0, "tip": "The pipe symbol connects commands."},
      {"id": "unix_medium_009", "question": "Which command is used to permanently delete files, bypassing the trash/recycle bin?", "options": ["rm -f", "rm -rf", "delete -force", "erase -p"], "correct": 0, "tip": "The '-f' (force) option for rm."},
      {"id": "unix_medium_010", "question": "How do you append output to an existing file in Unix?", "options": [">>", ">", "|", "&"], "correct": 0, "tip": ">> redirects and appends standard output."},
      {"id": "unix_medium_011", "question": "Which command is used to view system log files in real-time?", "options": ["tail -f /var/log/syslog", "cat /var/log/syslog", "less /var/log/syslog", "more /var/log/syslog"], "correct": 0, "tip": "The '-f' option for tail follows the file as it grows."},
      {"id": "unix_medium_012", "question": "Which command is used to determine the type of a file?", "options": ["file", "type", "kind", "format"], "correct": 0, "tip": "file command classifies files."},
      {"id": "unix_medium_013", "question": "Which command is used to display current logged-in users and their activities?", "options": ["w", "who", "users", "finger"], "correct": 0, "tip": "w provides a detailed summary of current user activity."},
      {"id": "unix_medium_014", "question": "Which command is used to find out which command is associated with an alias or function?", "options": ["type", "which", "command -v", "All of the above"], "correct": 3, "tip": "These commands help identify the source of a command."},
      {"id": "unix_medium_015", "question": "Which command is used to check open ports and connections?", "options": ["netstat -tuln", "ss -tuln", "nmap", "lsof -i"], "correct": 0, "tip": "netstat and ss are common for network statistics."},
      {"id": "unix_medium_016", "question": "How do you set an environment variable for the current shell session only?", "options": ["export MY_VAR=value", "set MY_VAR=value", "MY_VAR=value", "env MY_VAR=value"], "correct": 0, "tip": "Using `export` makes the variable available to child processes."},
      {"id": "unix_medium_017", "question": "Which command is used to display the network configuration (including IP address, subnet mask, etc.)?", "options": ["ip addr show", "ifconfig", "ip a", "All of the above"], "correct": 3, "tip": "`ip addr show` and `ip a` are modern alternatives to `ifconfig`."},
      {"id": "unix_medium_018", "question": "How do you list processes owned by a specific user?", "options": ["ps -u username", "top -U username", "pgrep -u username", "All of the above"], "correct": 3, "tip": "Various tools can filter processes by user."},
      {"id": "unix_medium_019", "question": "What is the purpose of the `nohup` command?", "options": ["To run a command immune to hangups, with output appended to nohup.out", "To stop a running process", "To run a command in the foreground", "To execute a command with elevated privileges"], "correct": 0, "tip": "nohup allows commands to continue running even after logout."},
      {"id": "unix_medium_020", "question": "Which command is used to recursively delete a directory and its contents?", "options": ["rm -r", "rmdir", "deldir -recursive", "delete_folder_contents"], "correct": 0, "tip": "The '-r' (recursive) option is crucial for `rm`."},
      {"id": "unix_medium_021", "question": "Which command is used to convert and copy files, often used for disk imaging?", "options": ["dd", "cp", "rsync", "clone"], "correct": 0, "tip": "dd is a powerful low-level utility."},
      {"id": "unix_medium_022", "question": "How do you find out which port a service is listening on?", "options": ["netstat -tulnp", "lsof -i :portnumber", "ss -tulnp", "All of the above"], "correct": 3, "tip": "These commands provide details about open sockets and listening ports."},
      {"id": "unix_medium_023", "question": "What is the purpose of the `chown -R user:group /path/to/directory` command?", "options": ["To recursively change the owner and group of files and directories", "To change only the owner", "To change only the group", "To change file permissions"], "correct": 0, "tip": "The '-R' option makes the change recursive."},
      {"id": "unix_medium_024", "question": "Which command is used to display the disk usage of the current directory in a human-readable format?", "options": ["du -sh", "df -h", "du -h", "disk_usage -human"], "correct": 0, "tip": "The '-s' option for summary, and '-h' for human-readable output."},
      {"id": "unix_medium_025", "question": "How do you schedule a command to run repeatedly at specified intervals (e.g., daily, hourly)?", "options": ["crontab", "at", "schedule", "repeat"], "correct": 0, "tip": "crontab manages scheduled commands for regular execution."}
    ],
    "hard": [
      {"id": "unix_hard_001", "question": "Explain the difference between hard links and symbolic links.", "options": ["Hard links point to the inode, symbolic links point to the file path; hard links must be on the same filesystem, symbolic links can span filesystems", "Hard links are always relative, symbolic links are always absolute", "Symbolic links are faster than hard links", "Hard links are only for directories"], "correct": 0, "tip": "Understanding inodes is key to grasping hard links."},
      {"id": "unix_hard_002", "question": "What is the purpose of `chroot` and when would you use it?", "options": ["To change the apparent root directory for the current running process and its children, used for security/testing", "To change the ownership of a root directory", "To create a new root user", "To recover a corrupted filesystem"], "correct": 0, "tip": "chroot environments isolate processes."},
      {"id": "unix_hard_003", "question": "Describe the `inotify` mechanism in Linux and its use cases.", "options": ["A Linux kernel subsystem that monitors filesystem events (e.g., file access, modification, deletion)", "A network monitoring tool", "A process scheduling algorithm", "A method for inter-process communication"], "correct": 0, "tip": "inotify is used by tools like `watchdog` and for real-time file synchronization."},
      {"id": "unix_hard_004", "question": "How do you debug a shell script?", "options": ["Using `bash -x script.sh` or `set -x` inside the script", "Using a debugger like GDB", "Adding print statements randomly", "There are no debugging tools for shell scripts"], "correct": 0, "tip": "`set -x` displays commands and their arguments as they are executed."},
      {"id": "unix_hard_005", "question": "What is a 'shebang' line in a script and why is it important?", "options": ["The first line of a script that tells the operating system which interpreter to use for execution", "A comment line", "A line that defines variables", "A line that specifies script permissions"], "correct": 0, "tip": "The shebang (e.g., `#!/bin/bash`) ensures the script runs with the correct interpreter."},
      {"id": "unix_hard_006", "question": "Explain the concept of `inodes` in Unix-like filesystems.", "options": ["A data structure that stores information about a file or directory, except its actual content and name", "The content of a file", "The file path", "A block of memory used by processes"], "correct": 0, "tip": "Inodes contain metadata like permissions, ownership, timestamps, and block addresses."},
      {"id": "unix_hard_007", "question": "What is the difference between `exec` and `source` (or `.`) commands in shell scripting?", "options": ["`exec` replaces the current shell with the specified command, `source` runs the script in the current shell environment", "They are identical in functionality", "exec is for background processes, source is for foreground", "exec only works with compiled programs"], "correct": 0, "tip": "source is crucial for applying environment changes to the current shell."},
      {"id": "unix_hard_008", "question": "How do you manage background processes and bring them back to the foreground?", "options": ["Using `&` to run in background, `jobs` to list, `fg` to bring to foreground", "Using `Ctrl+C` to background, `Ctrl+Z` to foreground", "Using `nohup` to background, `watch` to foreground", "This functionality is not available in Unix"], "correct": 0, "tip": "Ctrl+Z stops a process and sends it to background, `bg` resumes it in background."},
      {"id": "unix_hard_009", "question": "Explain the concept of process signals and list some common ones.", "options": ["Software interrupts sent to processes to notify them of events; common ones include SIGTERM, SIGKILL, SIGHUP, SIGINT", "A way for processes to communicate via network", "A type of inter-process memory sharing", "A method for controlling hardware devices"], "correct": 0, "tip": "Signals are crucial for process management and inter-process communication."},
      {"id": "unix_hard_010", "question": "What is `udev` in Linux and what is its purpose?", "options": ["A device manager for the Linux kernel, handling hotplugging and device node creation", "A user management utility", "A daemon for scheduling tasks", "A tool for managing network interfaces"], "correct": 0, "tip": "udev rules define how devices are handled when connected."},
      {"id": "unix_hard_011", "question": "Describe the boot process of a typical Linux system.", "options": ["BIOS/UEFI -> MBR/GPT -> Bootloader (GRUB) -> Kernel -> initramfs -> systemd/init", "Kernel -> Bootloader -> BIOS", "Applications -> Kernel -> BIOS", "Bootloader -> initramfs -> BIOS"], "correct": 0, "tip": "Each stage loads the next, leading to a fully operational system."},
      {"id": "unix_hard_012", "question": "What are namespaces in Linux kernel and their role?", "options": ["A feature that partitions kernel resources so that a process sees its own isolated set of resources", "A way to organize filesystems", "A method for network segmentation", "A naming convention for kernel modules"], "correct": 0, "tip": "Namespaces are fundamental for container technologies like Docker."},
      {"id": "unix_hard_013", "question": "What is `cgroups` in Linux and what is it used for?", "options": ["Control Groups, a Linux kernel feature that limits, accounts for, and isolates resource usage (CPU, memory, I/O, network) for groups of processes", "A command-line tool for group management", "A system for managing file permissions", "A network configuration utility"], "correct": 0, "tip": "cgroups are another cornerstone of containerization."},
      {"id": "unix_hard_014", "question": "Explain the concept of `mount points` and their importance.", "options": ["A directory in a filesystem where another filesystem is attached", "A point where a network connection is established", "A location where a hard drive is physically installed", "A type of file permission"], "correct": 0, "tip": "Mount points allow access to various storage devices and remote filesystems."},
      {"id": "unix_hard_015", "question": "How does `sysctl` work and what is it used for?", "options": ["A utility to modify kernel parameters at runtime", "A command for managing system services", "A tool for viewing system logs", "A network diagnostic utility"], "correct": 0, "tip": "sysctl values are often set in `/etc/sysctl.conf`."},
      {"id": "unix_hard_016", "question": "What is the role of `systemd` in modern Linux distributions?", "options": ["A system and service manager that provides a suite of daemons, utilities, and libraries for managing a Linux system", "A graphical desktop environment", "A programming language for system calls", "A tool for network configuration"], "correct": 0, "tip": "systemd has largely replaced the traditional `init` system."},
      {"id": "unix_hard_017", "question": "Describe the steps involved in compiling a C program on Unix-like systems.", "options": ["Preprocessing -> Compilation -> Assembly -> Linking", "Writing code -> Running directly", "Interpreting -> Executing", "Debugging -> Deployment"], "correct": 0, "tip": "The GCC compiler handles these steps, often in one command."},
      {"id": "unix_hard_018", "question": "What is the difference between `stdin`, `stdout`, and `stderr`?", "options": ["`stdin` is standard input, `stdout` is standard output, `stderr` is standard error output for diagnostic messages", "They are all for input only", "They are all for output only", "They are types of files"], "correct": 0, "tip": "These are the three standard I/O streams in Unix."},
      {"id": "unix_hard_019", "question": "How do you use `rsync` for efficient file synchronization?", "options": ["`rsync -avz source/ destination/` (archive, verbose, compress)", "It's only for local copies", "It only works with SSH", "It's a simple copy command"], "correct": 0, "tip": "rsync minimizes data transfer by only copying changed parts of files."},
      {"id": "unix_hard_020", "question": "Explain `SELinux` or `AppArmor` and their purpose.", "options": ["Mandatory Access Control (MAC) security mechanisms for Linux that enforce security policies beyond traditional DAC", "Package managers for software installation", "Disk partitioning tools", "Network firewalls"], "correct": 0, "tip": "These enhance system security by restricting what programs can do."},
      {"id": "unix_hard_021", "question": "What is a `socket` in the context of Unix networking?", "options": ["An endpoint of a two-way communication link between two programs running on the network", "A physical network interface card", "A type of network cable", "A program for network analysis"], "correct": 0, "tip": "Sockets are used for both local and network communication."},
      {"id": "unix_hard_022", "question": "Describe the `fork()` and `exec()` system calls.", "options": ["`fork()` creates a new process (child) that is a copy of the parent; `exec()` replaces the current process's image with a new program", "They are used for file I/O", "They manage memory allocation", "They are for network connections only"], "correct": 0, "tip": "These are fundamental for process creation and execution in Unix."},
      {"id": "unix_hard_023", "question": "What is a `daemon` in Unix-like systems?", "options": ["A background process that runs without user interaction, often performing system tasks", "A type of user account", "A command-line editor", "A network protocol"], "correct": 0, "tip": "Daemons typically end with 'd' (e.g., `sshd`, `httpd`)."},
      {"id": "unix_hard_024", "question": "How does the `PATH` environment variable work?", "options": ["It's a colon-separated list of directories that the shell searches for executable commands", "It specifies the home directory", "It defines network paths", "It stores temporary file locations"], "correct": 0, "tip": "A correct PATH setup is crucial for command execution."},
      {"id": "unix_hard_025", "question": "What is `LVM` (Logical Volume Manager) and its benefits?", "options": ["A system that provides a method of allocating disk space more flexibly than conventional partitioning", "A tool for managing network storage", "A software for creating backups", "A type of filesystem"], "correct": 0, "tip": "LVM offers features like resizing, snapshots, and striping volumes."}
    ]
  },
  "bash": {
    "easy": [
      {"id": "bash_easy_001", "question": "What is the command to display the content of a variable in Bash?", "options": ["echo $VAR_NAME", "print $VAR_NAME", "display $VAR_NAME", "show $VAR_NAME"], "correct": 0, "tip": "Prefixing with `$` dereferences the variable."},
      {"id": "bash_easy_002", "question": "How do you assign a value to a variable in Bash?", "options": ["VAR=value", "VAR = value", "$VAR=value", "set VAR=value"], "correct": 0, "tip": "No spaces around the `=` for assignment."},
      {"id": "bash_easy_003", "question": "Which command is used to make a script executable?", "options": ["chmod +x script.sh", "execute script.sh", "runnable script.sh", "bash script.sh"], "correct": 0, "tip": "+x adds execute permissions."},
      {"id": "bash_easy_004", "question": "How do you run a Bash script named `myscript.sh`?", "options": ["./myscript.sh", "bash myscript.sh", "sh myscript.sh", "All of the above (if executable)"], "correct": 3, "tip": "The interpreter explicitly or implicitly via shebang."},
      {"id": "bash_easy_005", "question": "What is the symbol for logical AND in Bash conditionals?", "options": ["&&", "||", "&", "AND"], "correct": 0, "tip": "&& is for logical AND."},
      {"id": "bash_easy_006", "question": "What is the symbol for logical OR in Bash conditionals?", "options": ["||", "&&", "|", "OR"], "correct": 0, "tip": "|| is for logical OR."},
      {"id": "bash_easy_007", "question": "How do you comment a line in a Bash script?", "options": ["# This is a comment", "// This is a comment", "-- This is a comment", "/* This is a comment */"], "correct": 0, "tip": "# denotes a comment."},
      {"id": "bash_easy_008", "question": "Which construct is used for conditional execution in Bash?", "options": ["if", "for", "while", "case"], "correct": 0, "tip": "if statements control conditional flow."},
      {"id": "bash_easy_009", "question": "Which loop iterates over a list of items?", "options": ["for", "while", "until", "loop"], "correct": 0, "tip": "for loops are ideal for iterating over collections."},
      {"id": "bash_easy_010", "question": "Which loop continues as long as a condition is true?", "options": ["while", "for", "until", "do"], "correct": 0, "tip": "while loops are condition-controlled."},
      {"id": "bash_easy_011", "question": "How do you get user input in a Bash script?", "options": ["read -p \"Prompt: \" VAR", "getinput VAR", "input VAR", "scan VAR"], "correct": 0, "tip": "read is used for input."},
      {"id": "bash_easy_012", "question": "What does `$?` represent in Bash?", "options": ["Exit status of the last executed command", "The last argument of the last command", "The process ID of the last command", "The number of arguments"], "correct": 0, "tip": "It's crucial for error handling."},
      {"id": "bash_easy_013", "question": "How do you redirect standard output to a file?", "options": [">", ">>", "<", "|"], "correct": 0, "tip": "> overwrites, >> appends."},
      {"id": "bash_easy_014", "question": "How do you redirect standard error to a file?", "options": ["2>", "&>", "error>", "stderr>"], "correct": 0, "tip": "2 is the file descriptor for stderr."},
      {"id": "bash_easy_015", "question": "What is the purpose of backticks (`) or `$()` in Bash?", "options": ["Command substitution", "Variable assignment", "String concatenation", "Arithmetic operations"], "correct": 0, "tip": "They execute a command and substitute its output."},
      {"id": "bash_easy_016", "question": "How do you refer to the first argument passed to a script?", "options": ["$1", "$0", "$*", "$#"], "correct": 0, "tip": "$0 is the script name itself."},
      {"id": "bash_easy_017", "question": "How do you refer to all arguments passed to a script?", "options": ["$@", "$*", "$#", "$0"], "correct": 0, "tip": "$@ treats each argument as a separate word."},
      {"id": "bash_easy_018", "question": "What does `$#` represent in Bash?", "options": ["Number of arguments passed to a script", "Last argument", "Exit status", "Process ID"], "correct": 0, "tip": "# gives count."},
      {"id": "bash_easy_019", "question": "What does `$$` represent in Bash?", "options": ["Process ID of the current shell", "Parent process ID", "Number of arguments", "Exit status"], "correct": 0, "tip": "Useful for creating unique temporary files."},
      {"id": "bash_easy_020", "question": "How do you escape a special character in Bash?", "options": ["Using a backslash (\\)", "Using quotes", "Using a hash (#)", "Using a dollar sign ($)"], "correct": 0, "tip": "Backslash escapes the next character."},
      {"id": "bash_easy_021", "question": "What is the `printf` command used for?", "options": ["Formatted output", "Printing to a file", "Printing variables", "Printing only strings"], "correct": 0, "tip": "Similar to C's printf for precise formatting."},
      {"id": "bash_easy_022", "question": "How do you perform integer arithmetic in Bash?", "options": ["$((expression))", "[ expression ]", "`expression`", "expr expression"], "correct": 0, "tip": "$(( )) is preferred for arithmetic expansion."},
      {"id": "bash_easy_023", "question": "What is the purpose of the `test` command or `[` in Bash?", "options": ["To evaluate conditional expressions", "To run a program", "To create a file", "To display text"], "correct": 0, "tip": "Used in `if` statements for checking conditions."},
      {"id": "bash_easy_024", "question": "How do you check if a file exists in Bash?", "options": ["-f file", "-e file", "-d file", "-s file"], "correct": 0, "tip": "-f checks for regular file existence."},
      {"id": "bash_easy_025", "question": "How do you check if a directory exists in Bash?", "options": ["-d dir", "-f dir", "-e dir", "-s dir"], "correct": 0, "tip": "-d checks for directory existence."},
      {"id": "bash_easy_026", "question": "What does `set -e` do in a Bash script?", "options": ["Exits immediately if a command exits with a non-zero status", "Echoes commands before execution", "Disables error messages", "Sets environment variables"], "correct": 0, "tip": "Crucial for robust scripting, prevents silent failures."},
      {"id": "bash_easy_027", "question": "What does `set -x` do in a Bash script?", "options": ["Prints commands and their arguments as they are executed", "Exits on error", "Enables verbose output for functions", "Disables expansion"], "correct": 0, "tip": "Useful for debugging scripts."},
      {"id": "bash_easy_028", "question": "How do you define a function in Bash?", "options": ["function_name() { commands; }", "define function_name { commands; }", "func function_name { commands; }", "function function_name { commands; }"], "correct": 0, "tip": "The `()` after the name define it as a function."},
      {"id": "bash_easy_029", "question": "How do you call a function in Bash?", "options": ["function_name arg1 arg2", "call function_name", "run function_name", "exec function_name"], "correct": 0, "tip": "Just type the function name and arguments."},
      {"id": "bash_easy_030", "question": "What is the difference between `[` and `[[` in Bash conditionals?", "options": ["`[[` provides more advanced features like pattern matching and avoids word splitting", "`[` is for strings, `[[` is for numbers", "`[` is deprecated, `[[` is preferred", "No significant difference"], "correct": 0, "tip": "`[[` is generally safer and more flexible."},
      {"id": "bash_easy_031", "question": "How do you get the length of a string variable `my_string`?", "options": ["${#my_string}", "${my_string_length}", "len($my_string)", "length $my_string"], "correct": 0, "tip": "${#variable} is parameter expansion for length."},
      {"id": "bash_easy_032", "question": "How do you get a substring from `my_string` from index 2 for 3 characters?", "options": ["${my_string:2:3}", "${my_string.substring(2,3)}", "substr $my_string 2 3", "cut -c 2-4 $my_string"], "correct": 0, "tip": "Bash parameter expansion offers powerful string manipulation."},
      {"id": "bash_easy_033", "question": "How do you get the base name of a file path (e.g., `file.txt` from `/path/to/file.txt`)?", "options": ["basename /path/to/file.txt", "dirname /path/to/file.txt", "cut -f /path/to/file.txt", "getname /path/to/file.txt"], "correct": 0, "tip": "basename extracts the filename."},
      {"id": "bash_easy_034", "question": "How do you get the directory name of a file path (e.g., `/path/to` from `/path/to/file.txt`)?", "options": ["dirname /path/to/file.txt", "basename /path/to/file.txt", "getdir /path/to/file.txt", "pathof /path/to/file.txt"], "correct": 0, "tip": "dirname extracts the directory component."},
      {"id": "bash_easy_035", "question": "What is the purpose of `trap` command in Bash?", "options": ["To catch and handle signals", "To create a loop", "To define a function", "To execute commands periodically"], "correct": 0, "tip": "Useful for cleaning up temporary files on script exit."},
      {"id": "bash_easy_036", "question": "How do you check if a command exists in Bash?", "options": ["command -v command_name", "type command_name", "which command_name", "All of the above"], "correct": 3, "tip": "These all help locate or verify commands."},
      {"id": "bash_easy_037", "question": "What is the purpose of the `source` command (or `.`)?", "options": ["To execute a script in the current shell environment", "To execute a script in a subshell", "To make a script executable", "To compile a script"], "correct": 0, "tip": "Allows environment variables and functions to persist in the current shell."},
      {"id": "bash_easy_038", "question": "How do you perform string comparison for equality in Bash?", "options": ["[ \"$VAR1\" = \"$VAR2\" ]", "[ \"$VAR1\" == \"$VAR2\" ]", "[ \"$VAR1\" -eq \"$VAR2\" ]", "Both A and B (for modern Bash)"], "correct": 3, "tip": "`=` is POSIX compliant, `==` is a Bash extension."},
      {"id": "bash_easy_039", "question": "How do you perform string comparison for inequality in Bash?", "options": ["[ \"$VAR1\" != \"$VAR2\" ]", "[ \"$VAR1\" -ne \"$VAR2\" ]", "[ \"$VAR1\" <> \"$VAR2\" ]", "[ \"$VAR1\" -not \"$VAR2\" ]"], "correct": 0, "tip": "`!=` is the correct operator."},
      {"id": "bash_easy_040", "question": "How do you create an array in Bash?", "options": ["my_array=(val1 val2 val3)", "my_array=[val1,val2,val3]", "array my_array = (val1 val2)", "declare -a my_array=(val1 val2)"], "correct": 0, "tip": "Parentheses and spaces define array elements."},
      {"id": "bash_easy_041", "question": "How do you access an element of an array in Bash (e.g., the first element)?", "options": ["${my_array[0]}", "$my_array[0]", "${my_array_0}", "$my_array_first"], "correct": 0, "tip": "Arrays are zero-indexed."},
      {"id": "bash_easy_042", "question": "How do you get all elements of an array in Bash?", "options": ["${my_array[@]}", "${my_array[*]}", "$my_array_all", "All of the above (with subtle differences)"], "correct": 3, "tip": "`@` is generally preferred for looping to preserve word splitting."},
      {"id": "bash_easy_043", "question": "How do you get the number of elements in an array in Bash?", "options": ["${#my_array[@]}", "${#my_array}", "count(${my_array})", "length $my_array"], "correct": 0, "tip": "Using `#` with `@` or `*` for array length."},
      {"id": "bash_easy_044", "question": "What is the purpose of the `case` statement in Bash?", "options": ["To perform different actions based on different patterns of a variable", "To define a function", "To loop through a list", "To handle errors"], "correct": 0, "tip": "Similar to switch-case in other languages."},
      {"id": "bash_easy_045", "question": "How do you exit a Bash script with a specific exit code?", "options": ["exit 0", "exit 1", "return 0", "quit"], "correct": 0, "tip": "exit with 0 for success, non-zero for failure."},
      {"id": "bash_easy_046", "question": "What does `read -r` do?", "options": ["Prevents backslash escapes from being interpreted", "Reads only one character", "Reads from a specific file", "Reads in reverse order"], "correct": 0, "tip": "Useful when reading literal strings, e.g., from files."},
      {"id": "bash_easy_047", "question": "How do you check if a variable is unset or null in Bash?", "options": ["-z \"$VAR\"", "-n \"$VAR\"", "-e \"$VAR\"", "-v \"$VAR\""], "correct": 0, "tip": "-z checks if the string's length is zero."},
      {"id": "bash_easy_048", "question": "How do you check if a variable is not null and has a non-zero length?", "options": ["-n \"$VAR\"", "-z \"$VAR\"", "-e \"$VAR\"", "-v \"$VAR\""], "correct": 0, "tip": "-n checks if the string's length is non-zero."},
      {"id": "bash_easy_049", "question": "What is the purpose of the `select` command in Bash?", "options": ["To create a simple menu from a list of words", "To select files based on criteria", "To filter output", "To sort data"], "correct": 0, "tip": "Useful for interactive scripts."},
      {"id": "bash_easy_050", "question": "How do you compare numbers in Bash conditions (e.g., is x equal to y)?", "options": ["-eq", "=", "==", "eq"], "correct": 0, "tip": "-eq is for numeric equality."},
      {"id": "bash_easy_051", "question": "How do you compare numbers for 'greater than or equal to' in Bash?", "options": ["-ge", "-gt", ">=", "=>"], "correct": 0, "tip": "-ge stands for greater than or equal."},
      {"id": "bash_easy_052", "question": "How do you compare numbers for 'less than or equal to' in Bash?", "options": ["-le", "-lt", "<=", "=<"], "correct": 0, "tip": "-le stands for less than or equal."},
      {"id": "bash_easy_053", "question": "What does `shift` command do in a Bash script?", "options": ["Shifts positional parameters to the left", "Shifts the script's output to another file", "Changes directory", "Changes file permissions"], "correct": 0, "tip": "Useful for processing a varying number of arguments."},
      {"id": "bash_easy_054", "question": "What is the purpose of `getopts` in Bash?", "options": ["To parse command-line options and arguments", "To get the current options of the shell", "To set shell options", "To get user input interactively"], "correct": 0, "tip": "A more robust way to handle script arguments than simple positional parameters."},
      {"id": "bash_easy_055", "question": "How do you create a temporary file in Bash safely?", "options": ["mktemp", "tempfile", "create_tmp", "new_temp"], "correct": 0, "tip": "mktemp creates unique temporary files/directories."},
      {"id": "bash_easy_056", "question": "What is the meaning of `#!/bin/bash` at the beginning of a script?", "options": ["Shebang: specifies the interpreter for the script", "A comment line", "A command to execute the script", "A declaration of variables"], "correct": 0, "tip": "It's crucial for making scripts executable directly."},
      {"id": "bash_easy_057", "question": "What is the difference between single quotes (`'`) and double quotes (`\"`) in Bash?", "options": ["Single quotes prevent all expansion; double quotes allow variable and command substitution", "Single quotes allow variable expansion; double quotes do not", "There is no difference", "Single quotes are for numbers, double quotes for strings"], "correct": 0, "tip": "Understanding quoting rules is vital for correct script behavior."},
      {"id": "bash_easy_058", "question": "How do you include another script (e.g., `helpers.sh`) into your current script?", "options": ["source helpers.sh", ". helpers.sh", "include helpers.sh", "Both A and B"], "correct": 3, "tip": "Both `source` and `.` achieve the same result."},
      {"id": "bash_easy_059", "question": "What does the `$` symbol typically indicate when used before a name (e.g., `$VAR`)?", "options": ["Variable expansion", "Command execution", "String literal", "Numeric operation"], "correct": 0, "tip": "It retrieves the value of a variable."},
      {"id": "bash_easy_060", "question": "What is the purpose of the `export` command?", "options": ["To make a variable available to child processes", "To delete a variable", "To print a variable's value", "To assign a value to a variable"], "correct": 0, "tip": "Environment variables are inherited by subshells."}
    ],
    "medium": [
      {"id": "bash_medium_001", "question": "How do you perform floating-point arithmetic in Bash?", "options": ["Using `bc` or `awk`", "Using `(())`", "It's not possible directly", "Using `expr`"], "correct": 0, "tip": "Bash's native arithmetic is integer-only."},
      {"id": "bash_medium_002", "question": "How do you iterate over files in a directory in Bash?", "options": ["for f in *; do ...; done", "while read f; do ...; done < <(ls)", "find . -type f -exec ...", "All of the above (depending on specific needs)"], "correct": 3, "tip": "The `for` loop is simplest for globbing, `find` for more complex criteria."},
      {"id": "bash_medium_003", "question": "How do you capture the output of a command into a variable?", "options": ["VAR=$(command)", "VAR=`command`", "read VAR < <(command)", "All of the above (with subtle differences)"], "correct": 3, "tip": "Command substitution with `$()` is preferred over backticks for nesting and clarity."},
      {"id": "bash_medium_004", "question": "Explain globbing in Bash.", "options": ["The process by which the shell expands wildcard characters (e.g., *, ?, []) into a list of matching filenames", "A method for securely connecting to remote servers", "A type of string manipulation", "A way to run commands in the background"], "correct": 0, "tip": "Globbing is distinct from regular expressions."},
      {"id": "bash_medium_005", "question": "What is the difference between `test -n \"$VAR\"` and `test -z \"$VAR\"`?", "options": ["`-n` checks if string is not null/empty, `-z` checks if string is null/empty", "`-n` checks for numeric, `-z` for zero", "They are identical", "`-n` is for numbers, `-z` is for strings"], "correct": 0, "tip": "These are common string tests in Bash."},
      {"id": "bash_medium_006", "question": "How do you read a file line by line in a Bash script?", "options": ["while IFS= read -r line; do ...; done < filename", "cat filename | while read line; do ...; done", "for line in $(cat filename); do ...; done", "read file_content filename"], "correct": 0, "tip": "`IFS= read -r` is the most robust way to handle various file contents."},
      {"id": "bash_medium_007", "question": "What is the significance of `#!/bin/env bash`?", "options": ["It allows the system to find the bash executable from the PATH, making the script more portable", "It forces the script to run with `env` command", "It's an error and will prevent script execution", "It's a comment for environmental variables"], "correct": 0, "tip": "Useful when bash might not be in `/bin/`."},
      {"id": "bash_medium_008", "question": "How do you handle signals (e.g., Ctrl+C) in a Bash script?", "options": ["Using the `trap` command", "Using `if` statements to check for signals", "Signals cannot be handled in Bash", "By running the script in the background"], "correct": 0, "tip": "trap allows you to execute commands when a signal is received."},
      {"id": "bash_medium_009", "question": "What is the purpose of `set -u` or `set -o nounset`?", "options": ["Treat unset variables as an error and exit immediately", "Unset all variables at the beginning of the script", "Print the value of unset variables", "Allow use of unset variables without error"], "correct": 0, "tip": "Helps catch typos in variable names."},
      {"id": "bash_medium_010", "question": "How do you compare two numbers for greater than using `[[`?", "options": ["[[ $num1 -gt $num2 ]]", "[[ $num1 > $num2 ]]", "[[ $num1 -ge $num2 ]]", "[[ $num1 == $num2 ]]"], "correct": 0, "tip": `>` is used for lexicographical comparison in `[[`, so `-gt` is safer for numbers."},
      {"id": "bash_medium_011", "question": "How do you debug a Bash script by printing each command before execution?", "options": ["`bash -x script.sh` or `set -x`", "`bash -v script.sh`", "`bash -n script.sh`", "`bash -d script.sh`"], "correct": 0, "tip": "The `-x` option turns on tracing."},
      {"id": "bash_medium_012", "question": "How do you use `grep` to search for multiple patterns (OR logic)?", "options": ["`grep -E 'pattern1|pattern2' file`", "`grep 'pattern1 pattern2' file`", "`grep -a 'pattern1,pattern2' file`", "`grep pattern1 pattern2 file`"], "correct": 0, "tip": "-E enables extended regular expressions."},
      {"id": "bash_medium_013", "question": "How do you use `grep` to search for multiple patterns (AND logic)?", "options": ["`grep pattern1 file | grep pattern2`", "`grep 'pattern1 & pattern2' file`", "`grep -A 'pattern1 pattern2' file`", "It's not possible with grep alone"], "correct": 0, "tip": "Piping grep commands together creates an AND condition."},
      {"id": "bash_medium_014", "question": "What is the purpose of the `exec` command in Bash?", "options": ["Replaces the current shell with the specified command, without creating a new process", "Executes a command in a new subshell", "Runs a command in the background", "Compiles and executes a program"], "correct": 0, "tip": "Useful for daemonizing processes or avoiding subshell overhead."},
      {"id": "bash_medium_015", "question": "How do you read a password without echoing it to the screen?", "options": ["read -s password", "read password", "hidden_read password", "secure_input password"], "correct": 0, "tip": "The `-s` option for `read` suppresses echoing."},
      {"id": "bash_medium_016", "question": "What is process substitution and when is it useful?", "options": ["Allows the output of a process to be treated as a temporary file or vice versa, useful for commands that expect file arguments", "A way to switch between processes", "A method for changing process IDs", "A technique for moving files between processes"], "correct": 0, "tip": "Uses `<()` and `>()` syntax."},
      {"id": "bash_medium_017", "question": "How do you iterate over an associative array in Bash?", "options": ["for key in \"${!my_array[@]}\"; do echo \"$key: ${my_array[$key]}\"; done", "for item in ${my_array[@]}; do ...; done", "foreach key, value in my_array; do ...; done", "It's not directly possible in Bash"], "correct": 0, "tip": "Bash 4+ supports associative arrays."},
      {"id": "bash_medium_018", "question": "What is the purpose of `xargs`?", "options": ["To build and execute command lines from standard input", "To execute commands in parallel", "To list command arguments", "To format output from commands"], "correct": 0, "tip": "Useful when a command takes arguments, not standard input."},
      {"id": "bash_medium_019", "question": "How do you use `sed` to replace all occurrences of 'foo' with 'bar' in a file?", "options": ["sed 's/foo/bar/g' filename", "sed 'replace foo bar' filename", "sed -r 'foo -> bar' filename", "sed 'search/foo/replace/bar' filename"], "correct": 0, "tip": "The 'g' flag ensures global replacement on each line."},
      {"id": "bash_medium_020", "question": "How do you use `awk` to print the second column of a file?", "options": ["awk '{print $2}' filename", "awk -c 2 filename", "awk --column=2 filename", "awk 'select column 2' filename"], "correct": 0, "tip": "$2 refers to the second field."},
      {"id": "bash_medium_021", "question": "What is the purpose of `eval` command in Bash?", "options": ["To evaluate arguments as a single command and execute it", "To evaluate arithmetic expressions", "To evaluate logical conditions", "To display environment variables"], "correct": 0, "tip": "Use `eval` with caution due to security implications."},
      {"id": "bash_medium_022", "question": "How do you perform substring replacement in Bash variables?", "options": ["${VAR//pattern/replacement}", "${VAR/pattern/replacement}", "replace $VAR pattern replacement", "str_replace $VAR pattern replacement"], "correct": 0, "tip": "`//` for global replacement, `/` for first match."},
      {"id": "bash_medium_023", "question": "What is a `here document` (`here-string`) in Bash?", "options": ["A way to feed multiple lines of input to a command from within a script", "A document that explains shell scripting", "A file containing a list of commands", "A type of variable declaration"], "correct": 0, "tip": "Uses `<<DELIMITER` syntax."},
      {"id": "bash_medium_024", "question": "How do you check if a variable is defined and not empty using pattern matching in Bash?", "options": ["[[ -v VAR && -n $VAR ]]", "[[ $VAR ]]", "[[ \"$VAR\" =~ . ]]", "if [ -z \"$VAR\" ]; then ..."], "correct": 0, "tip": "`[[ $VAR ]]` is a common idiom for checking if a string is non-empty."},
      {"id": "bash_medium_025", "question": "What is the purpose of `disown` command?", "options": ["To remove a job from the shell's job table, so it won't be killed on logout", "To kill a background process", "To change ownership of a process", "To suspend a process"], "correct": 0, "tip": "Useful for long-running processes that you want to detach from your session."}
    ],
    "hard": [
      {"id": "bash_hard_001", "question": "Explain the concept of `job control` in Bash.", "options": ["The ability to stop, suspend, resume, and switch between foreground and background execution of processes within a shell session", "Managing cron jobs", "Controlling user permissions", "Automating script execution"], "correct": 0, "tip": "Commands like `fg`, `bg`, `jobs`, `Ctrl+Z` are part of job control."},
      {"id": "bash_hard_002", "question": "How do you implement a robust error handling mechanism in a Bash script?", "options": ["Using `set -e`, `trap ERR`, functions for error reporting, and proper exit codes", "Only using `if` statements", "Ignoring all errors", "Using `goto` statements for error jumps"], "correct": 0, "tip": "A well-structured script anticipates and handles errors gracefully."},
      {"id": "bash_hard_003", "question": "Describe the difference between `function NAME { ... }` and `NAME() { ... }` in Bash.", "options": ["`function NAME` is a Bash keyword that creates a shell function, `NAME()` is a POSIX standard syntax that also creates a shell function. Both are similar in modern Bash.", "`function NAME` creates a subshell, `NAME()` runs in current shell", "One is for compiled functions, the other for interpreted", "No difference, they are identical"], "correct": 0, "tip": "The `function` keyword is less portable but can make functions stand out."},
      {"id": "bash_hard_004", "question": "What is the significance of `IFS` (Internal Field Separator) and how can it be used?", "options": ["A special shell variable that defines the character(s) used for word splitting by the shell, important for parsing lists or lines from files", "A variable for file permissions", "An indicator of shell version", "A command for input/output"], "correct": 0, "tip": "Often temporarily set to newline (`IFS=`) for reading files line by line."},
      {"id": "bash_hard_005", "question": "Explain the use of `>` vs `&>` vs `2>&1` for redirection.", "options": ["`>` redirects stdout; `&>` redirects both stdout and stderr; `2>&1` redirects stderr to where stdout is directed", "They all redirect stdout only", "They are for input redirection", "They are used for variable assignment"], "correct": 0, "tip": "Understanding file descriptors (1 for stdout, 2 for stderr) is key."},
      {"id": "bash_hard_006", "question": "How do you prevent word splitting and pathname expansion (globbing) of variables?", "options": ["By quoting variables with double quotes (`\"$VAR\"`)", "By using single quotes (`'$VAR'`)", "By using `unset` command", "By setting `IFS` to empty"], "correct": 0, "tip": "Always double-quote variables unless you specifically intend word splitting or globbing."},
      {"id": "bash_hard_007", "question": "What is a `subshell` and when is it created?", "options": ["A child process that executes a command or script in its own environment, created by command substitution (`$()`), pipelines (`|`), or parentheses (`()`)", "A shell that runs with root privileges", "A shell that is always in the background", "A shell that only executes functions"], "correct": 0, "tip": "Variables set in a subshell do not affect the parent shell."},
      {"id": "bash_hard_008", "question": "Explain the concept of `parameter expansion` in Bash beyond simple `$VAR`.", "options": ["Advanced features like substring extraction (`${VAR:offset:length}`), pattern removal (`${VAR#pattern}`), and default values (`${VAR:-word}`)", "Expanding paths", "Expanding commands", "Expanding user input"], "correct": 0, "tip": "Powerful for manipulating strings and variables directly in Bash."},
      {"id": "bash_hard_009", "question": "How do you handle options and arguments in a Bash script using `getopts`?", "options": ["`getopts` parses short options (e.g., `-a`, `-b`) and arguments, commonly used in a `while` loop with a `case` statement", "It's for parsing long options only", "It's a function for getting environment variables", "It's deprecated and replaced by `getopt`"], "correct": 0, "tip": "`getopts` is built-in and simpler for simple options."},
      {"id": "bash_hard_010", "question": "What is the difference between `exec` and `source` when executing a script?", "options": ["`exec` replaces the current shell with the script's interpreter, `source` runs the script in the current shell environment", "Both create a new subshell", "Both replace the current shell", "One is for compiled scripts, the other for interpreted"], "correct": 0, "tip": "Crucial distinction for how script changes affect the parent shell."},
      {"id": "bash_hard_011", "question": "How do you perform string manipulation (e.g., replace substring, remove prefix/suffix) without external tools like `sed` or `awk`?", "options": ["Using Bash parameter expansion features like `${VAR//old/new}`, `${VAR#prefix}`, `${VAR%suffix}`", "It's not possible, external tools are always needed", "Using only `echo` and `cut`", "Writing custom functions for each operation"], "correct": 0, "tip": "Bash has powerful built-in string manipulation capabilities."},
      {"id": "bash_hard_012", "question": "Describe a common pitfall in Bash scripting related to spaces in filenames and how to avoid it.", "options": ["Unquoted variables cause word splitting, leading to issues with filenames containing spaces; avoid by always double-quoting variables (`\"$VAR\"`)", "Spaces are not allowed in filenames", "Bash automatically handles spaces", "Using only single quotes solves the problem"], "correct": 0, "tip": "Double-quoting is a golden rule in Bash scripting."},
      {"id": "bash_hard_013", "question": "How can you implement a retry mechanism for a command that might fail transiently?", "options": ["Using a `while` loop with `sleep` and checking the command's exit status (`$?`)", "Only by running the command manually", "Bash doesn't support retry logic", "By using `cron` jobs"], "correct": 0, "tip": "Robust scripts often include retries for network operations or external services."},
      {"id": "bash_hard_014", "question": "What is the purpose of `mktemp` and why is it preferred over manually creating temporary files?", "options": ["`mktemp` creates unique temporary files or directories securely, avoiding race conditions and name collisions", "It's for creating permanent files", "It just creates a file with a .tmp extension", "It's less secure but faster"], "correct": 0, "tip": "Manual temporary file creation can lead to security vulnerabilities."},
      {"id": "bash_hard_015", "question": "How do you perform complex logical operations (AND, OR, NOT) using `[[` conditions?", "options": ["Using `&&`, `||`, and `!` operators within `[[ ... ]]`", "Using `if` statements for each condition", "Only simple comparisons are allowed", "Using `grep` for logic"], "correct": 0, "tip": "`[[` allows for more natural expression of complex logic."},
      {"id": "bash_hard_016", "question": "What are named pipes (FIFOs) in Bash and when are they useful?", "options": ["A type of file that allows two-way communication between unrelated processes, useful for inter-process communication without temporary files", "Pipes that have a specific name", "Pipes that are stored in memory only", "Pipes that can only be used by root"], "correct": 0, "tip": "Created with `mkfifo`."},
      {"id": "bash_hard_017", "question": "Explain the concept of `here-strings` and provide an example.", "options": ["A feature similar to here-documents but for a single line of input, providing input to a command without using a pipe: `command <<< \"string\"`", "A way to pass multiline strings to a function", "A method for commenting out blocks of code", "A syntax for defining functions"], "correct": 0, "tip": "Convenient for short inputs to commands like `grep` or `sed`."},
      {"id": "bash_hard_018", "question": "How can you make a Bash script truly portable across different Unix-like systems?", "options": ["By avoiding Bash-specific features, using POSIX-compliant syntax, and minimizing reliance on external commands where possible", "By compiling it to a binary", "By only using `echo` and `cat`", "By ensuring all commands are installed on the target system"], "correct": 0, "tip": "Sticking to POSIX shell features increases portability."},
      {"id": "bash_hard_019", "question": "What is the `PS1` variable and how is it customized?", "options": ["The primary prompt string variable, customized to change the appearance of the shell prompt (e.g., `PS1=\"\\u@\\h:\\w\\$ \"`)", "A variable for storing passwords", "A variable for script arguments", "A variable for file permissions"], "correct": 0, "tip": "Allows for dynamic and informative prompts."},
      {"id": "bash_hard_020", "question": "Explain `coproc` in Bash and its use cases.", "options": ["A Bash keyword that creates a coprocess (a cooperatively executing shell command), allowing for two-way communication with a subshell", "A command for copying processes", "A tool for process monitoring", "A method for parallel execution"], "correct": 0, "tip": "Useful for interacting with commands that expect continuous input/output."},
      {"id": "bash_hard_021", "question": "What is the difference between `exit` and `return` in Bash scripts?", "options": ["`exit` terminates the entire script, `return` exits a function and returns control to the calling script", "`exit` is for functions, `return` is for scripts", "They are interchangeable", "Neither allows specifying an exit code"], "correct": 0, "tip": "Understanding scope is crucial here."},
      {"id": "bash_hard_022", "question": "How do you implement a simple locking mechanism in Bash to prevent multiple instances of a script from running concurrently?", "options": ["Using `mkdir` for an exclusive lock (e.g., `mkdir /tmp/mylockdir && ... || exit 1`) and `rmdir` to release", "Using `flock` command", "Checking if the script's PID exists", "All of the above (with varying robustness)"], "correct": 3, "tip": "File-based locking is common for simple cases."},
      {"id": "bash_hard_023", "question": "What is the purpose of `shopt` command in Bash?", "options": ["To set or unset various shell options that modify the behavior of the shell", "To show current shop stock", "To change shell's working directory", "To list available commands"], "correct": 0, "tip": "Options like `globstar`, `extglob`, `nullglob` can be controlled with `shopt`."},
      {"id": "bash_hard_024", "question": "How do you manage arrays of arrays or multi-dimensional data structures in Bash?", "options": ["Bash does not directly support multi-dimensional arrays, but they can be simulated using associative arrays or by string manipulation", "Using nested array declarations", "By using the `matrix` keyword", "It's impossible in Bash"], "correct": 0, "tip": "Bash is not ideal for complex data structures; consider Python or Perl for that."},
      {"id": "bash_hard_025", "question": "Explain the concept of `brace expansion` in Bash and provide an example.", "options": ["A mechanism by which arbitrary strings can be generated, useful for creating lists of files or commands: `echo {file1,file2}.txt` -> `file1.txt file2.txt`", "Expanding curly braces in variable names", "A type of arithmetic expansion", "A way to group commands"], "correct": 0, "tip": "Brace expansion is very efficient as it's handled by the shell itself."}
    ]
  },
  "plsql": {
    "easy": [
      {"id": "plsql_easy_001", "question": "What does PL/SQL stand for?", "options": ["Procedural Language/Structured Query Language", "Program Logic/SQL", "Personal Language/SQL", "Practical Language/SQL"], "correct": 0, "tip": "PL/SQL combines SQL with procedural programming features."},
      {"id": "plsql_easy_002", "question": "Which block is mandatory in a PL/SQL anonymous block?", "options": ["BEGIN...END", "DECLARE", "EXCEPTION", "PACKAGE"], "correct": 0, "tip": "BEGIN...END encloses the executable statements."},
      {"id": "plsql_easy_003", "question": "Which keyword is used to declare variables in PL/SQL?", "options": ["DECLARE", "VAR", "DEFINE", "SET"], "correct": 0, "tip": "DECLARE block is optional but defines variables."},
      {"id": "plsql_easy_004", "question": "How do you print output to the console in PL/SQL?", "options": ["DBMS_OUTPUT.PUT_LINE", "PRINT", "ECHO", "WRITE_LINE"], "correct": 0, "tip": "DBMS_OUTPUT package is used for debugging and output."},
      {"id": "plsql_easy_005", "question": "What is `%TYPE` used for in PL/SQL variable declarations?", "options": ["To declare a variable with the same data type as a column or another variable", "To define a new data type", "To specify a variable's size", "To indicate a generic type"], "correct": 0, "tip": "Ensures type compatibility and reduces maintenance."},
      {"id": "plsql_easy_006", "question": "What is `%ROWTYPE` used for in PL/SQL variable declarations?", "options": ["To declare a record variable that represents a row in a table or view", "To define a new row type", "To specify a row's size", "To indicate a collection of rows"], "correct": 0, "tip": "Useful for fetching entire rows into a single variable."},
      {"id": "plsql_easy_007", "question": "Which statement is used to retrieve data into a PL/SQL variable?", "options": ["SELECT ... INTO", "FETCH", "GET DATA", "RETRIEVE"], "correct": 0, "tip": "INTO clause is essential for single-row queries."},
      {"id": "plsql_easy_008", "question": "Which control structure is used for conditional logic in PL/SQL?", "options": ["IF...THEN...END IF", "CASE", "SWITCH", "WHILE"], "correct": 0, "tip": "IF statements are fundamental for decision making."},
      {"id": "plsql_easy_009", "question": "Which loop iterates a specified number of times?", "options": ["FOR loop", "WHILE loop", "LOOP...END LOOP", "CURSOR loop"], "correct": 0, "tip": "FOR loops are often used with explicit ranges or cursors."},
      {"id": "plsql_easy_010", "question": "Which loop continues as long as a condition is true?", "options": ["WHILE loop", "FOR loop", "LOOP...END LOOP", "CURSOR loop"], "correct": 0, "tip": "WHILE loops are condition-controlled."},
      {"id": "plsql_easy_011", "question": "What is an explicit cursor in PL/SQL?", "options": ["A named PL/SQL construct for processing rows returned by a SELECT statement one by one", "A pointer to a table", "A type of loop", "A temporary table"], "correct": 0, "tip": "Explicit cursors provide more control over query results."},
      {"id": "plsql_easy_012", "question": "Which statements are used to manage an explicit cursor?", "options": ["OPEN, FETCH, CLOSE", "START, READ, END", "GET, NEXT, DONE", "BEGIN, GET, FINISH"], "correct": 0, "tip": "These are the lifecycle steps of an explicit cursor."},
      {"id": "plsql_easy_013", "question": "What is an implicit cursor in PL/SQL?", "options": ["A cursor automatically created by Oracle for all DML statements (INSERT, UPDATE, DELETE) and single-row SELECT statements", "A cursor defined by the user", "A cursor that is always open", "A cursor that returns multiple rows"], "correct": 0, "tip": "Implicit cursors simplify single-row operations."},
      {"id": "plsql_easy_014", "question": "Which attributes are associated with implicit cursors?", "options": ["%FOUND, %NOTFOUND, %ISOPEN, %ROWCOUNT", "%SUCCESS, %FAILURE, %STATUS", "%ACTIVE, %INACTIVE", "%VALID, %INVALID"], "correct": 0, "tip": "These attributes provide information about the DML operation."},
      {"id": "plsql_easy_015", "question": "What is an exception in PL/SQL?", "options": ["An error condition during program execution", "A special type of variable", "A predefined function", "A keyword for looping"], "correct": 0, "tip": "Exceptions allow for structured error handling."},
      {"id": "plsql_easy_016", "question": "Which block is used for error handling in PL/SQL?", "options": ["EXCEPTION", "ERROR", "HANDLE", "CATCH"], "correct": 0, "tip": "EXCEPTION block handles runtime errors gracefully."},
      {"id": "plsql_easy_017", "question": "What is a predefined exception in PL/SQL?", "options": ["An exception that is declared implicitly by Oracle and raised automatically when a predefined error occurs", "An exception defined by the user", "An exception that always stops execution", "An exception that is never handled"], "correct": 0, "tip": "Examples include NO_DATA_FOUND, TOO_MANY_ROWS."},
      {"id": "plsql_easy_018", "question": "Which predefined exception is raised when a SELECT INTO statement returns no rows?", "options": ["NO_DATA_FOUND", "TOO_MANY_ROWS", "ZERO_DIVIDE", "INVALID_NUMBER"], "correct": 0, "tip": "Common error to handle in single-row queries."},
      {"id": "plsql_easy_019", "question": "Which predefined exception is raised when a SELECT INTO statement returns more than one row?", "options": ["TOO_MANY_ROWS", "NO_DATA_FOUND", "DUP_VAL_ON_INDEX", "VALUE_ERROR"], "correct": 0, "tip": "Occurs when a query designed for one row returns multiple."},
      {"id": "plsql_easy_020", "question": "What is a stored procedure in PL/SQL?", "options": ["A named PL/SQL block stored in the database, compiled once, and can be executed multiple times", "A temporary block of code", "A function that returns a value", "A view on a table"], "correct": 0, "tip": "Procedures perform actions, functions return values."},
      {"id": "plsql_easy_021", "question": "What is a function in PL/SQL?", "options": ["A named PL/SQL block stored in the database that returns a single value", "A procedure that doesn't return anything", "A block used for exception handling", "A package component"], "correct": 0, "tip": "Functions can be used in SQL queries."},
      {"id": "plsql_easy_022", "question": "What is a package in PL/SQL?", "options": ["A schema object that groups related PL/SQL types, items, and subprograms (procedures, functions) into a single unit", "A collection of tables", "A type of cursor", "A temporary block of code"], "correct": 0, "tip": "Packages promote modularity and reusability."},
      {"id": "plsql_easy_023", "question": "What are the two parts of a PL/SQL package?", "options": ["Specification and Body", "Header and Footer", "Declaration and Implementation", "Public and Private"], "correct": 0, "tip": "Specification declares, body implements."},
      {"id": "plsql_easy_024", "question": "What is a trigger in PL/SQL?", "options": ["A PL/SQL block associated with a table, view, schema, or database, that fires implicitly when a specific event occurs", "A stored procedure", "A function that returns a boolean", "A type of cursor"], "correct": 0, "tip": "Triggers enforce business rules or auditing."},
      {"id": "plsql_easy_025", "question": "Which event can fire a DML trigger?", "options": ["INSERT, UPDATE, DELETE", "SELECT", "CREATE, ALTER, DROP", "COMMIT, ROLLBACK"], "correct": 0, "tip": "DML triggers respond to data modification events."},
      {"id": "plsql_easy_026", "question": "What are `FOR EACH ROW` and `FOR EACH STATEMENT` triggers?", "options": ["Row-level triggers fire once for each row affected by a DML statement; Statement-level triggers fire once per statement, regardless of affected rows.", "They are the same.", "Row-level is faster, Statement-level is slower.", "Row-level is for SELECT, Statement-level for DML."], "correct": 0, "tip": "Important distinction for trigger behavior and performance."},
      {"id": "plsql_easy_027", "question": "What is the purpose of `COMMIT` in PL/SQL?", "options": ["To make permanent the changes made to the database by the current transaction", "To undo changes", "To save a PL/SQL block", "To start a new transaction"], "correct": 0, "tip": "Commit ensures data persistence."},
      {"id": "plsql_easy_028", "question": "What is the purpose of `ROLLBACK` in PL/SQL?", "options": ["To undo all changes made to the database by the current transaction since the last COMMIT or ROLLBACK", "To save changes permanently", "To start a new transaction", "To delete a table"], "correct": 0, "tip": "Rollback maintains data integrity."},
      {"id": "plsql_easy_029", "question": "What is a `SAVEPOINT` in PL/SQL?", "options": ["A marker within a transaction to which you can later roll back, partially undoing changes", "A point where data is saved permanently", "A point where a new transaction begins", "A point for creating backups"], "correct": 0, "tip": "Allows for partial rollbacks within complex transactions."},
      {"id": "plsql_easy_030", "question": "Which PL/SQL data type is used for storing variable-length character strings?", "options": ["VARCHAR2", "CHAR", "NUMBER", "DATE"], "correct": 0, "tip": "VARCHAR2 is common for dynamic strings."},
      {"id": "plsql_easy_031", "question": "Which PL/SQL data type is used for storing fixed-length character strings?", "options": ["CHAR", "VARCHAR2", "STRING", "TEXT"], "correct": 0, "tip": "CHAR pads with spaces up to its defined length."},
      {"id": "plsql_easy_032", "question": "Which PL/SQL data type is used for storing numeric values?", "options": ["NUMBER", "INTEGER", "DECIMAL", "NUMERIC"], "correct": 0, "tip": "NUMBER is the most flexible numeric type."},
      {"id": "plsql_easy_033", "question": "Which PL/SQL data type is used for storing date and time values?", "options": ["DATE", "DATETIME", "TIMESTAMP", "TIME"], "correct": 0, "tip": "DATE stores year, month, day, hour, minute, and second."},
      {"id": "plsql_easy_034", "question": "What is the `RAISE` statement used for in PL/SQL?", "options": ["To explicitly raise an exception", "To print a message", "To start a new transaction", "To commit changes"], "correct": 0, "tip": "Used for both predefined and user-defined exceptions."},
      {"id": "plsql_easy_035", "question": "What is a user-defined exception in PL/SQL?", "options": ["An exception declared and raised by the programmer to handle specific error conditions not covered by predefined exceptions", "An exception raised by the system", "An exception that cannot be handled", "An exception that is always ignored"], "correct": 0, "tip": "Allows for more granular error management."},
      {"id": "plsql_easy_036", "question": "How do you define a constant in PL/SQL?", "options": ["CONSTANT_NAME CONSTANT data_type := value;", "CONSTANT_NAME := value;", "DEFINE CONSTANT_NAME value;", "VAR CONSTANT_NAME = value;"], "correct": 0, "tip": "Use the CONSTANT keyword and assign a value during declaration."},
      {"id": "plsql_easy_037", "question": "What is the significance of `NOCOPY` hint in PL/SQL?", "options": ["It specifies that parameters should be passed by reference, improving performance for large data structures", "It prevents copying of data during assignment", "It ensures data integrity", "It enables parallel processing"], "correct": 0, "tip": "Can lead to performance gains but needs careful use as it bypasses copy-on-write."},
      {"id": "plsql_easy_038", "question": "What is `SQL%ROWCOUNT` used for?", "options": ["To check the number of rows affected by the most recent DML statement (INSERT, UPDATE, DELETE) or single-row SELECT", "To count rows in a table", "To count iterations in a loop", "To get the total number of rows in a query result"], "correct": 0, "tip": "A useful implicit cursor attribute."},
      {"id": "plsql_easy_039", "question": "What is `SQL%FOUND` used for?", "options": ["To check if the most recent DML statement or single-row SELECT affected at least one row", "To check if a record was found in a table", "To check if a condition is true", "To check for errors"], "correct": 0, "tip": "Returns TRUE if one or more rows were processed, FALSE otherwise."},
      {"id": "plsql_easy_040", "question": "What is `SQL%NOTFOUND` used for?", "options": ["To check if the most recent DML statement or single-row SELECT affected no rows", "To check if a record was not found", "To check if a condition is false", "To check for warnings"], "correct": 0, "tip": "Returns TRUE if no rows were processed, FALSE otherwise."},
      {"id": "plsql_easy_041", "question": "What is `SQL%ISOPEN` used for?", "options": ["To check if an implicit cursor is open (always FALSE for implicit cursors)", "To check if a connection to the database is open", "To check if a PL/SQL block is running", "To check if a table is locked"], "correct": 0, "tip": "Implicit cursors are closed immediately after execution."},
      {"id": "plsql_easy_042", "question": "What is the purpose of `NULL` in PL/SQL statements?", "options": ["To do nothing; it is a placeholder that does not perform any operation", "To assign a zero value", "To indicate an error", "To comment out a line"], "correct": 0, "tip": "Useful for empty blocks or satisfying syntax requirements."},
      {"id": "plsql_easy_043", "question": "How do you assign values to PL/SQL variables?", "options": ["Using the `:=` operator", "Using the `=` operator", "Using `SET` keyword", "Using `ASSIGN` keyword"], "correct": 0, "tip": ":= is the assignment operator in PL/SQL."},
      {"id": "plsql_easy_044", "question": "What is a `RECORD` type in PL/SQL?", "options": ["A composite data type that can hold values of different data types, similar to a row in a table or a structure in C", "A single-row table", "A collection of records", "A type of cursor"], "correct": 0, "tip": "Records allow grouping related fields."},
      {"id": "plsql_easy_045", "question": "What is a `TABLE` type (associative array/index-by table) in PL/SQL?", "options": ["A collection data type that stores elements with a unique index, useful for storing data in memory", "A physical database table", "A type of view", "A type of external file"], "correct": 0, "tip": "Also known as associative arrays, indexed by numbers or strings."},
      {"id": "plsql_easy_046", "question": "What is a `VARRAY` (Varying Array) type in PL/SQL?", "options": ["A collection data type that stores a fixed number of elements, ordered sequentially", "A dynamic array that can change size", "A type of record", "A table type with varying columns"], "correct": 0, "tip": "VARRAYs have a defined maximum size."},
      {"id": "plsql_easy_047", "question": "What is `NESTED TABLE` type in PL/SQL?", "options": ["A collection data type that can store an arbitrary number of elements, stored in a separate storage table", "A table that is nested within another table", "A temporary table used in loops", "A table that can only store numeric data"], "correct": 0, "tip": "Nested tables offer more flexibility than VARRAYs regarding size."},
      {"id": "plsql_easy_048", "question": "Which command is used to compile a PL/SQL package specification?", "options": ["CREATE OR REPLACE PACKAGE PACKAGE_NAME", "ALTER PACKAGE PACKAGE_NAME COMPILE", "COMPILE PACKAGE_NAME SPECIFICATION", "SAVE PACKAGE_NAME"], "correct": 0, "tip": "Compilation is part of package creation/modification."},
      {"id": "plsql_easy_049", "question": "Which command is used to compile a PL/SQL procedure or function?", "options": ["CREATE OR REPLACE PROCEDURE/FUNCTION PROCEDURE_NAME", "ALTER PROCEDURE/FUNCTION PROCEDURE_NAME COMPILE", "COMPILE PROCEDURE/FUNCTION PROCEDURE_NAME", "Both A and B"], "correct": 3, "tip": "You can recompile invalid objects or replace existing ones."},
      {"id": "plsql_easy_050", "question": "What is the purpose of `PRAGMA EXCEPTION_INIT`?", "options": ["To associate an Oracle error number with a user-defined exception name", "To initialize all exceptions", "To disable exception handling", "To define a new pragma"], "correct": 0, "tip": "Allows specific handling of standard Oracle errors."},
      {"id": "plsql_easy_051", "question": "How do you declare a variable as NOT NULL in PL/SQL?", "options": ["variable_name data_type NOT NULL := value;", "variable_name data_type := value NOT NULL;", "NOT NULL variable_name data_type;", "declare variable_name data_type not null;"], "correct": 0, "tip": "A value must be assigned when declared as NOT NULL."},
      {"id": "plsql_easy_052", "question": "What is the default parameter mode in PL/SQL procedures and functions?", "options": ["IN", "OUT", "IN OUT", "DEFAULT"], "correct": 0, "tip": "IN parameters are read-only within the subprogram."},
      {"id": "plsql_easy_053", "question": "What is an `IN` parameter mode?", "options": ["The parameter value is passed into the subprogram and cannot be modified inside it", "The parameter value is returned to the calling environment", "The parameter value can be both passed and returned", "The parameter is optional"], "correct": 0, "tip": "Acts like a constant within the subprogram."},
      {"id": "plsql_easy_054", "question": "What is an `OUT` parameter mode?", "options": ["The parameter value is returned to the calling environment; its initial value is discarded upon entry", "The parameter value is passed into the subprogram", "The parameter value can be both passed and returned", "The parameter is mandatory"], "correct": 0, "tip": "Used for returning results from procedures."},
      {"id": "plsql_easy_055", "question": "What is an `IN OUT` parameter mode?", "options": ["The parameter value can be both passed into the subprogram and returned to the calling environment", "The parameter is read-only", "The parameter is write-only", "The parameter is optional"], "correct": 0, "tip": "Allows modification of the passed value."},
      {"id": "plsql_easy_056", "question": "What is the purpose of `EXCEPTION WHEN OTHERS THEN`?", "options": ["To catch any exception not explicitly handled by other `WHEN` clauses", "To raise a new exception", "To ignore all exceptions", "To log only specific errors"], "correct": 0, "tip": "A generic handler, often used for logging unknown errors."},
      {"id": "plsql_easy_057", "question": "How do you create a simple anonymous PL/SQL block?", "options": ["DECLARE ... BEGIN ... END;", "BEGIN ... END;", "FUNCTION ... END FUNCTION;", "PROCEDURE ... END PROCEDURE;"], "correct": 0, "tip": "DECLARE section is optional, BEGIN and END are not."},
      {"id": "plsql_easy_058", "question": "What is the purpose of `FOR UPDATE` clause in a `SELECT` statement within PL/SQL?", "options": ["To lock the selected rows for update, preventing other transactions from modifying them until the current transaction commits or rolls back", "To force an update on all rows", "To speed up SELECT statements", "To retrieve only updated rows"], "correct": 0, "tip": "Ensures data consistency in concurrent environments."},
      {"id": "plsql_easy_059", "question": "What is `COMMIT WORK` in PL/SQL?", "options": ["An explicit `COMMIT` statement; `WORK` keyword is optional", "It's only for rolling back", "It's a different command than `COMMIT`", "It indicates a pending commit"], "correct": 0, "tip": "Equivalent to `COMMIT`; `WORK` is keyword noise."},
      {"id": "plsql_easy_060", "question": "What is `RAISE_APPLICATION_ERROR` used for?", "options": ["To raise a user-defined error from a stored program unit to the calling environment, with a custom error number and message", "To raise a predefined Oracle error", "To log errors to a file", "To clear error messages"], "correct": 0, "tip": "Useful for returning controlled error messages to client applications."}
    ],
    "medium": [
      {"id": "plsql_medium_001", "question": "Explain the difference between procedures and functions in PL/SQL.", "options": ["Functions must return a value, procedures do not; functions can be used in SQL, procedures cannot (directly)", "Procedures are faster than functions", "Functions can only have IN parameters, procedures can have all types", "Procedures are for DML, functions are for SELECT"], "correct": 0, "tip": "The return value and SQL usability are key differentiators."},
      {"id": "plsql_medium_002", "question": "What is the `FORALL` statement used for?", "options": ["To improve performance of DML statements by binding entire collections at once", "To loop through a cursor", "To execute a statement for each row in a table", "To perform conditional logic"], "correct": 0, "tip": "FORALL significantly reduces context switching between PL/SQL and SQL engines."},
      {"id": "plsql_medium_003", "question": "What is the `BULK COLLECT` clause used for?", "options": ["To retrieve multiple rows from a SQL query into a PL/SQL collection with a single fetch operation", "To insert multiple rows into a table", "To update multiple rows simultaneously", "To delete multiple rows efficiently"], "correct": 0, "tip": "BULK COLLECT also reduces context switching."},
      {"id": "plsql_medium_004", "question": "Explain the concept of `autocommit` in PL/SQL.", "options": ["PL/SQL does not have an autocommit feature; transactions must be explicitly committed or rolled back", "All DML statements are automatically committed", "Only SELECT statements are autocommitted", "Autocommit is enabled by default"], "correct": 0, "tip": "This emphasizes the importance of explicit transaction control."},
      {"id": "plsql_medium_005", "question": "What is a `REF CURSOR` in PL/SQL?", "options": ["A PL/SQL data type that represents a pointer to a cursor, allowing cursors to be passed as parameters between PL/SQL units or returned from functions", "A cursor that references a table", "A read-only cursor", "A temporary cursor"], "correct": 0, "tip": "REF CURSORs are dynamic and flexible, especially for returning result sets."},
      {"id": "plsql_medium_006", "question": "What are the types of `REF CURSOR`?", "options": ["Strongly typed and Weakly typed", "Open and Closed", "Implicit and Explicit", "Static and Dynamic"], "correct": 0, "tip": "Strongly typed has a predefined structure, weakly typed is more flexible."},
      {"id": "plsql_medium_007", "question": "What is `DBMS_SQL` package and when is it used?", "options": ["A built-in Oracle package used for dynamic SQL execution, especially when the SQL statement structure is unknown at compile time", "A package for database management", "A tool for performance tuning", "A package for security management"], "correct": 0, "tip": "More complex than `EXECUTE IMMEDIATE` but offers greater control."},
      {"id": "plsql_medium_008", "question": "What is `EXECUTE IMMEDIATE` and when is it used?", "options": ["A PL/SQL statement used for executing dynamic SQL statements or anonymous PL/SQL blocks at runtime", "A command for running OS commands", "A way to run SQL statements faster", "A function for compiling PL/SQL code"], "correct": 0, "tip": "Simpler than `DBMS_SQL` for basic dynamic SQL."},
      {"id": "plsql_medium_009", "question": "What is the purpose of `AUTHID CURRENT_USER` vs `AUTHID DEFINER` clause in stored procedures/functions/packages?", "options": ["`CURRENT_USER` means the program runs with the privileges of the invoking user; `DEFINER` means it runs with the privileges of the owner/creator", "They define who can execute the program", "They control data access speed", "They relate to transaction management"], "correct": 0, "tip": "Crucial for security and privilege management."},
      {"id": "plsql_medium_010", "question": "Explain the concept of `pragma AUTONOMOUS_TRANSACTION`.", "options": ["A directive that marks a PL/SQL block as an independent transaction, allowing it to commit or rollback without affecting the calling transaction", "A pragma for automatic transaction management", "A pragma that forces all transactions to be autonomous", "A pragma that disables transaction control"], "correct": 0, "tip": "Useful for logging, auditing, or independent operations within a larger transaction."},
      {"id": "plsql_medium_011", "question": "What is the `UTL_FILE` package used for?", "options": ["To read and write operating system text files from within PL/SQL", "To manage database files", "To handle large objects (LOBs)", "To interact with web services"], "correct": 0, "tip": "Requires directory objects and careful security considerations."},
      {"id": "plsql_medium_012", "question": "What is a `collection` in PL/SQL?", "options": ["A general term for PL/SQL data types that can hold multiple elements of the same type, such as VARRAYs, Nested Tables, and Associative Arrays", "A group of tables", "A type of view", "A set of SQL statements"], "correct": 0, "tip": "Collections are fundamental for handling sets of data in PL/SQL."},
      {"id": "plsql_medium_013", "question": "What is the `PIPELINED` clause for functions in PL/SQL?", "options": ["It allows a table function to return rows iteratively, rather than collecting all rows and returning them at once, improving performance and memory usage", "It enables parallel execution of functions", "It forces function execution to be in a pipeline", "It allows functions to write to files"], "correct": 0, "tip": "Useful for generating large result sets from PL/SQL functions."},
      {"id": "plsql_medium_014", "question": "What is a `ROWID` in Oracle?", "options": ["A pseudocolumn that represents the physical address of a row in a table", "A unique identifier for a row within a session", "A logical identifier for a row", "A primary key value"], "correct": 0, "tip": "ROWID can change if rows are moved (e.g., table reorganization)."},
      {"id": "plsql_medium_015", "question": "How do you handle `NO_DATA_FOUND` and `TOO_MANY_ROWS` for multiple-row queries without an explicit cursor?", "options": ["You can't; these exceptions are only for single-row `SELECT INTO` statements. Multiple-row queries need explicit cursors or `BULK COLLECT`.", "By using `IF` statements after the SELECT", "By wrapping the SELECT in a `BEGIN...END` block", "By using `EXISTS` clause"], "correct": 0, "tip": "Understanding cursor behavior is crucial for these exceptions."},
      {"id": "plsql_medium_016", "question": "What are `RECORD` types and how are they used in PL/SQL?", "options": ["Composite data types that allow grouping of related data items of different data types under a single name, accessed via `record_name.field_name`", "Used only for table rows", "A collection of homogeneous elements", "A type of array"], "correct": 0, "tip": "Useful for passing multiple related values as a single parameter or for local data structures."},
      {"id": "plsql_medium_017", "question": "What is the `INDEX BY` clause for collection types in PL/SQL?", "options": ["It specifies that the collection is an associative array (index-by table) with string or numeric keys", "It defines a database index", "It is for sorting collections", "It specifies a primary key for a collection"], "correct": 0, "tip": "Allows for flexible indexing of collection elements."},
      {"id": "plsql_medium_018", "question": "What is a `COLLECTION METHOD` in PL/SQL?", "options": ["Built-in functions that operate on collections (e.g., `COUNT`, `EXISTS`, `FIRST`, `LAST`, `EXTEND`, `TRIM`, `DELETE`)", "A way to define new collection types", "A method for querying collections in SQL", "A function for aggregating collection data"], "correct": 0, "tip": "These methods provide powerful tools for managing collection elements."},
      {"id": "plsql_medium_019", "question": "Explain the concept of `Schema Objects` in Oracle and give examples.", "options": ["Logical structures within a database owned by a specific user (schema owner), such as tables, views, indexes, sequences, procedures, functions, packages, triggers", "Physical database files", "Hardware components", "Network configurations"], "correct": 0, "tip": "Users own schema objects."},
      {"id": "plsql_medium_020", "question": "What is the `SCOPE` of a variable in PL/SQL?", "options": ["The region of a program where a variable can be accessed, determined by where it is declared (e.g., package, procedure, block)", "The data type of the variable", "The maximum size of the variable", "The default value of the variable"], "correct": 0, "tip": "Scope rules prevent naming conflicts and ensure data integrity."},
      {"id": "plsql_medium_021", "question": "How do you handle `PRAGMA RESTRICT_REFERENCES` in PL/SQL?", "options": ["It's a compiler directive used to assert the purity of stored functions, allowing them to be called from SQL statements (deprecated in newer Oracle versions)", "It restricts access to a function", "It prevents a function from modifying data", "It restricts the number of times a function can be called"], "correct": 0, "tip": "Newer Oracle versions (12c+) handle purity checks automatically."},
      {"id": "plsql_medium_022", "question": "What is the purpose of `SYS_CONTEXT` in PL/SQL?", "options": ["A SQL function that returns the value of a parameter from a namespace, commonly used for security, auditing, and application context", "To get system time", "To define a new context", "To connect to the database system"], "correct": 0, "tip": "Allows access to session or user-defined attributes."},
      {"id": "plsql_medium_023", "question": "Explain the concept of `Global Variables` in PL/SQL packages.", "options": ["Variables declared in the package specification, accessible throughout the package and to external programs (if public)", "Variables accessible only within a single procedure", "Variables that can be modified by any user without restrictions", "Variables that are stored in the database as tables"], "correct": 0, "tip": "Global package variables maintain state across sessions (within the same package instance)."},
      {"id": "plsql_medium_024", "question": "What is the difference between `SQLCODE` and `SQLERRM`?", "options": ["`SQLCODE` returns the Oracle error number, `SQLERRM` returns the associated error message", "Both return the error message", "Both return the error number", "One is for warnings, the other for errors"], "correct": 0, "tip": "Useful in exception handlers for detailed error information."},
      {"id": "plsql_medium_025", "question": "What is `DBLINK` (Database Link) in Oracle?", "options": ["A schema object that defines a one-way communication path from one Oracle database to another, allowing queries/DML across databases", "A link to a web page", "A backup mechanism", "A type of index"], "correct": 0, "tip": "Enables distributed queries and DML."}
    ],
    "hard": [
      {"id": "plsql_hard_001", "question": "Explain the concept of `Context Switching` between SQL and PL/SQL engines and how to minimize it.", "options": ["The overhead incurred when data and control are passed between the SQL engine and the PL/SQL engine; minimized by `FORALL` and `BULK COLLECT`", "Switching between database instances", "Changing user sessions", "Switching between different PL/SQL blocks"], "correct": 0, "tip": "Minimizing context switching is key for PL/SQL performance."},
      {"id": "plsql_hard_002", "question": "Describe the `Compound Trigger` in PL/SQL and its advantages.", "options": ["A trigger that allows you to specify actions for different timing points (BEFORE STATEMENT, BEFORE EACH ROW, AFTER EACH ROW, AFTER STATEMENT) within a single trigger body, improving logic management and solving mutating table issues", "A trigger that executes multiple times", "A trigger that can update multiple tables", "A trigger that combines multiple triggers into one"], "correct": 0, "tip": "Compound triggers offer better control and state management."},
      {"id": "plsql_hard_003", "question": "What is the `Mutating Table` error in PL/SQL and how is it resolved?", "options": ["Occurs when a trigger tries to query or modify the same table that is currently being modified by the triggering DML statement; resolved by `Compound Triggers`, `Autonomous Transactions`, or using a view", "An error when a table is dropped during a transaction", "An error due to incorrect data types", "An error when a trigger is trying to access another table"], "correct": 0, "tip": "A classic Oracle error that requires specific design patterns."},
      {"id": "plsql_hard_004", "question": "Explain `Fine-Grained Access Control (FGAC)` or `Virtual Private Database (VPD)` and its implementation in PL/SQL.", "options": ["A security feature that applies security policies (defined as PL/SQL functions) to database objects, enforcing row-level and column-level security dynamically based on user context", "A method for encrypting data", "A way to speed up database access", "A tool for auditing database changes"], "correct": 0, "tip": "VPD adds a dynamic WHERE clause to queries."},
      {"id": "plsql_hard_005", "question": "What is `Result Cache` for functions in PL/SQL and how does it work?", "options": ["A feature that caches the results of a function based on its input parameters, returning cached results for subsequent identical calls, improving performance", "A cache for SQL query results", "A temporary storage for variables", "A cache for database connections"], "correct": 0, "tip": "Useful for frequently called functions with static inputs."},
      {"id": "plsql_hard_006", "question": "Describe the use of `FORALL` and `BULK COLLECT` together for optimal DML performance.", "options": ["`BULK COLLECT` fetches multiple rows into a collection, and `FORALL` inserts/updates/deletes those collected rows in a single operation, drastically reducing context switching", "They are mutually exclusive", "One is for SELECT, the other for DML", "They are only for handling exceptions"], "correct": 0, "tip": "The combination is essential for high-performance PL/SQL operations."},
      {"id": "plsql_hard_007", "question": "What are `Native Dynamic SQL` (`EXECUTE IMMEDIATE`) versus `DBMS_SQL` for dynamic SQL and when to use each?", "options": ["`EXECUTE IMMEDIATE` is simpler for single dynamic statements; `DBMS_SQL` provides more control (e.g., for unknown number of bind variables, complex DDL) and is more robust for complex dynamic SQL", "Both are equally complex", "One is for static SQL, the other for dynamic", "DBMS_SQL is deprecated"], "correct": 0, "tip": "Choose based on complexity and control needs."},
      {"id": "plsql_hard_008", "question": "Explain the concept of `Scalar Subquery Caching` in PL/SQL.", "options": ["The Oracle database automatically caches the results of scalar subqueries in PL/SQL blocks, improving performance for repeated identical subquery executions", "Caching results of entire queries", "Caching function results only", "Caching only DML statements"], "correct": 0, "tip": "An automatic optimization by the database."},
      {"id": "plsql_hard_009", "question": "What is `Pipelined Table Functions` and their benefits?", "options": ["Functions that can return a collection of rows directly to a SQL query, acting like a table. They improve performance by streaming results iteratively, reducing memory usage for large result sets.", "Functions that execute in parallel", "Functions that are stored in a pipeline", "Functions that only return a single value"], "correct": 0, "tip": "Great for complex data transformations that need to be consumed like a table."},
      {"id": "plsql_hard_010", "question": "What is `LOB (Large Object)` data types in PL/SQL and how are they handled?", "options": ["Data types (BLOB, CLOB, NCLOB, BFILE) for storing large amounts of unstructured or semi-structured data, handled using `DBMS_LOB` package functions for reading/writing", "Ordinary large VARCHAR2 or NUMBER types", "Only for small text strings", "Cannot be handled in PL/SQL"], "correct": 0, "tip": "LOBs are stored differently from conventional data types."},
      {"id": "plsql_hard_011", "question": "Describe the `PL/SQL Gateway` and its role in web applications.", "options": ["A component that allows web servers (e.g., Apache with mod_plsql) to invoke PL/SQL procedures stored in the Oracle database via HTTP requests", "A gateway for database connections", "A tool for database administration", "A security component for PL/SQL code"], "correct": 0, "tip": "Enables web interaction with database logic."},
      {"id": "plsql_hard_012", "question": "What is `Native Compilation` of PL/SQL and its advantages?", "options": ["Compiling PL/SQL code into native machine code (C code compiled by the C compiler) instead of p-code, resulting in faster execution, especially for CPU-intensive operations", "Compiling PL/SQL into Java bytecode", "Compiling PL/SQL with external libraries", "Compiling PL/SQL dynamically"], "correct": 0, "tip": "Can offer significant performance gains but requires C compiler setup."},
      {"id": "plsql_hard_013", "question": "Explain `DBMS_SCHEDULER` package and its use cases.", "options": ["An Oracle package used for scheduling jobs within the database, offering more advanced features than `DBMS_JOB` (e.g., flexible schedules, chains, external jobs)", "A package for database performance tuning", "A package for managing database users", "A package for data import/export"], "correct": 0, "tip": "Replaces `DBMS_JOB` for more robust scheduling."},
      {"id": "plsql_hard_014", "question": "What is `Virtual Columns` in Oracle and how do they interact with PL/SQL?", "options": ["Columns in a table whose values are computed on the fly from an expression or a function, rather than being stored physically. PL/SQL can reference them like regular columns.", "Columns that only exist virtually in PL/SQL", "Columns that are used for security only", "Columns that are encrypted"], "correct": 0, "tip": "Useful for computed values without redundant storage."},
      {"id": "plsql_hard_015", "question": "Describe the `Flashback` features in Oracle and their relevance to PL/SQL developers.", "options": ["A set of features (e.g., Flashback Query, Flashback Table, Flashback Database) that allow viewing or recovering past states of data, crucial for data recovery and auditing, and PL/SQL can use them via `AS OF TIMESTAMP` or `AS OF SCN`", "Features for speeding up queries", "Features for data compression", "Features for data encryption"], "correct": 0, "tip": "Reduces the need for full database recovery in many cases."},
      {"id": "plsql_hard_016", "question": "What is `Result Caching` at the SQL query level vs. PL/SQL function level?", "options": ["SQL Query Result Cache caches results of SQL queries directly; PL/SQL Function Result Cache caches results of PL/SQL functions. Both aim to reduce repeated computations.", "They are the same feature.", "One is for DML, the other for SELECT.", "One is for local caching, the other for server-side."], "correct": 0, "tip": "Oracle offers caching at different layers."},
      {"id": "plsql_hard_017", "question": "Explain the concept of `Edition-Based Redefinition (EBR)` in Oracle and its benefit for PL/SQL.", "options": ["A feature that allows online upgrades and maintenance of applications without downtime by having multiple versions of schema objects simultaneously, useful for rolling out PL/SQL code changes", "A feature for optimizing PL/SQL code", "A method for data migration", "A tool for database backup"], "correct": 0, "tip": "Minimizes downtime for application upgrades."},
      {"id": "plsql_hard_018", "question": "How do you handle `LONG` and `LONG RAW` data types in modern PL/SQL?", "options": ["These are deprecated; convert them to `CLOB` (for text) and `BLOB` (for raw binary) and use `DBMS_LOB` package, or use `VARCHAR2` or `RAW` for smaller data", "They are still the preferred types", "They cannot be handled in PL/SQL anymore", "Only for very small data"], "correct": 0, "tip": "LOBs are the recommended types for large data."},
      {"id": "plsql_hard_019", "question": "What is `DBMS_PROFILER` and how is it used in PL/SQL development?", "options": ["An Oracle tool/package for profiling PL/SQL applications, providing execution time statistics for each line of code, helping identify performance bottlenecks", "A tool for securing PL/SQL code", "A package for generating random data", "A package for managing database connections"], "correct": 0, "tip": "Essential for performance tuning of PL/SQL code."},
      {"id": "plsql_hard_020", "question": "Explain the concept of `Determinism` in PL/SQL functions and its impact.", "options": ["A function is deterministic if it always returns the same result for the same input parameters and has no side effects. This allows Oracle to cache results or optimize query execution.", "A function that always runs at a fixed time", "A function that is always true", "A function that has no input parameters"], "correct": 0, "tip": "Deterministic functions can be leveraged by the query optimizer."},
      {"id": "plsql_hard_021", "question": "What are `WITH Clause (Subquery Factoring)` and `Recursive WITH` in PL/SQL?", "options": ["`WITH` clause defines named subqueries (CTEs) for better readability and reusability; `Recursive WITH` allows CTEs to refer to themselves for hierarchical/graph queries", "They are for temporary table creation only", "They are for complex joins", "They are deprecated features"], "correct": 0, "tip": "CTEs enhance query readability and can be optimized."},
      {"id": "plsql_hard_022", "question": "Describe `SecureFile LOBs` vs. `BasicFile LOBs`.", "options": ["`SecureFile LOBs` offer advanced features like compression, deduplication, encryption, and better performance; `BasicFile LOBs` are older, less efficient, and lack these features", "SecureFile LOBs are only for secure data", "BasicFile LOBs are faster", "SecureFile LOBs are only for small data"], "correct": 0, "tip": "SecureFile LOBs are the default and recommended type in modern Oracle versions."},
      {"id": "plsql_hard_023", "question": "What is `Application Context` in Oracle and how is it used with PL/SQL?", "options": ["A mechanism to store and retrieve session-specific information (key-value pairs) that can be accessed by PL/SQL procedures, triggers, or SQL queries, commonly used for security or auditing", "A database connection pool", "A user profile", "A log file for applications"], "correct": 0, "tip": "Provides a flexible way to pass context-sensitive data."},
      {"id": "plsql_hard_024", "question": "What is `Virtual Private Database (VPD)` and how is it implemented using PL/SQL?", "options": ["VPD dynamically modifies SQL statements issued by users based on security policies implemented as PL/SQL functions, thereby enforcing fine-grained access control on rows and/or columns.", "VPD encrypts the entire database.", "VPD is a networking feature.", "VPD is a type of database backup."], "correct": 0, "tip": "VPD is a robust security feature for multi-tenant environments or sensitive data."},
      {"id": "plsql_hard_025", "question": "Explain the use of `Pipelines` for inter-session communication in Oracle using `DBMS_PIPE`.", "options": ["`DBMS_PIPE` allows different PL/SQL sessions to communicate with each other by sending and receiving messages through named pipes, useful for loosely coupled communication", "Pipes are only for inter-process communication on the same server", "Pipes are for data transformation only", "Pipes are deprecated and not used"], "correct": 0, "tip": "Provides a simple messaging mechanism between database sessions."}
    ]
  },
  "ubuntu": {
    "easy": [
      {"id": "ubuntu_easy_001", "question": "Which command is used to update the package lists in Ubuntu?", "options": ["sudo apt update", "sudo apt upgrade", "apt-get refresh", "update-packages"], "correct": 0, "tip": "It fetches new package information from repositories."},
      {"id": "ubuntu_easy_002", "question": "Which command is used to install new packages in Ubuntu?", "options": ["sudo apt install package_name", "apt-get add package_name", "install package_name", "sudo add-package package_name"], "correct": 0, "tip": "apt is the primary command-line tool for package management."},
      {"id": "ubuntu_easy_003", "question": "Which command is used to remove packages in Ubuntu?", "options": ["sudo apt remove package_name", "apt-get delete package_name", "remove-package package_name", "uninstall package_name"], "correct": 0, "tip": "Removes the package but may leave configuration files."},
      {"id": "ubuntu_easy_004", "question": "Which command is used to remove packages and their configuration files?", "options": ["sudo apt purge package_name", "sudo apt remove --purge package_name", "sudo apt clean package_name", "Both A and B"], "correct": 3, "tip": "Purge removes everything associated with the package."},
      {"id": "ubuntu_easy_005", "question": "Which command is used to upgrade all installed packages to their latest versions?", "options": ["sudo apt upgrade", "sudo apt update", "sudo apt dist-upgrade", "upgrade-all"], "correct": 0, "tip": "Upgrades packages, usually without removing old ones or installing new ones."},
      {"id": "ubuntu_easy_006", "question": "Which command is used to list all installed packages?", "options": ["apt list --installed", "dpkg -l", "apt show all", "Both A and B"], "correct": 3, "tip": "apt list is newer, dpkg -l is older but still widely used."},
      {"id": "ubuntu_easy_007", "question": "Which command is used to search for a package in the Ubuntu repositories?", "options": ["apt search package_name", "apt find package_name", "search-package package_name", "apt-cache search package_name"], "correct": 0, "tip": "Searches package descriptions and names."},
      {"id": "ubuntu_easy_008", "question": "How do you check the Ubuntu version?", "options": ["lsb_release -a", "cat /etc/os-release", "uname -a", "All of the above"], "correct": 3, "tip": "Each command provides different levels of detail about the system."},
      {"id": "ubuntu_easy_009", "question": "Which command is used to view running processes in real-time with resource usage?", "options": ["top", "ps", "htop", "processlist"], "correct": 0, "tip": "top is a classic, htop is a more user-friendly alternative."},
      {"id": "ubuntu_easy_010", "question": "Which command is used to kill a process by its name?", "options": ["killall process_name", "kill process_id", "pkill process_name", "Both A and C"], "correct": 3, "tip": "killall and pkill are convenient for killing by name."},
      {"id": "ubuntu_easy_011", "question": "Which command is used to view disk space usage?", "options": ["df -h", "du -h", "diskfree", "freespace"], "correct": 0, "tip": "df shows filesystem disk space usage."},
      {"id": "ubuntu_easy_012", "question": "Which command is used to view directory disk usage?", "options": ["du -sh", "df -h", "dirsize", "folder_usage"], "correct": 0, "tip": "du summarizes file space usage."},
      {"id": "ubuntu_easy_013", "question": "How do you set file permissions in Ubuntu?", "options": ["chmod", "chown", "setperm", "perm"], "correct": 0, "tip": "chmod changes permissions (read, write, execute)."},
      {"id": "ubuntu_easy_014", "question": "How do you change the owner of a file or directory?", "options": ["chown", "chmod", "setowner", "owner"], "correct": 0, "tip": "chown changes user and/or group ownership."},
      {"id": "ubuntu_easy_015", "question": "Which command is used to display network configuration (IP address, etc.)?", "options": ["ip a", "ifconfig", "netstat", "ipconfig"], "correct": 0, "tip": "ip a is the modern Linux command, ifconfig is older."},
      {"id": "ubuntu_easy_016", "question": "Which command is used to check network connectivity to a host?", "options": ["ping", "netcheck", "testconn", "conn"], "correct": 0, "tip": "ping sends ICMP echo requests."},
      {"id": "ubuntu_easy_017", "question": "How do you switch to the root user in Ubuntu?", "options": ["sudo -i", "su -", "sudo su", "All of the above"], "correct": 3, "tip": "sudo -i and su - give you a root shell."},
      {"id": "ubuntu_easy_018", "question": "Which command is used to list currently logged-in users?", "options": ["who", "w", "users", "All of the above"], "correct": 3, "tip": "Different commands provide varying levels of detail."},
      {"id": "ubuntu_easy_019", "question": "Which command is used to manage system services (start, stop, enable)?", "options": ["systemctl", "service", "initctl", "control"], "correct": 0, "tip": "systemctl is the primary command for systemd-based systems."},
      {"id": "ubuntu_easy_020", "question": "How do you view the content of a `.deb` package?", "options": ["dpkg -c package.deb", "ar -tv package.deb", "lsdeb package.deb", "Both A and B"], "correct": 3, "tip": "dpkg -c lists contents, ar -tv views archive members."},
      {"id": "ubuntu_easy_021", "question": "Which command is used to install a local `.deb` file?", "options": ["sudo dpkg -i package.deb", "sudo apt install ./package.deb", "sudo install package.deb", "Both A and B"], "correct": 3, "tip": "apt can install local .deb files, handling dependencies."},
      {"id": "ubuntu_easy_022", "question": "Which command is used to remove unused packages that were installed as dependencies?", "options": ["sudo apt autoremove", "sudo apt clean", "sudo apt autoclean", "sudo apt remove --dependencies"], "correct": 0, "tip": "autoremove cleans up unneeded dependencies."},
      {"id": "ubuntu_easy_023", "question": "How do you check the status of a system service?", "options": ["systemctl status service_name", "service service_name status", "status service_name", "Both A and B"], "correct": 3, "tip": "systemctl is preferred for systemd services."},
      {"id": "ubuntu_easy_024", "question": "Which command is used to enable a system service to start on boot?", "options": ["sudo systemctl enable service_name", "sudo service service_name enable", "sudo update-rc.d service_name enable", "sudo bootenable service_name"], "correct": 0, "tip": "systemctl manages startup behavior."},
      {"id": "ubuntu_easy_025", "question": "Which command is used to disable a system service from starting on boot?", "options": ["sudo systemctl disable service_name", "sudo service service_name disable", "sudo update-rc.d service_name disable", "sudo bootdisable service_name"], "correct": 0, "tip": "Reverses the enable action."},
      {"id": "ubuntu_easy_026", "question": "How do you add a new user in Ubuntu?", "options": ["sudo adduser username", "sudo useradd username", "sudo newuser username", "Both A and B"], "correct": 3, "tip": "adduser is more interactive and creates home directories/groups."},
      {"id": "ubuntu_easy_027", "question": "How do you delete a user in Ubuntu?", "options": ["sudo deluser username", "sudo userdel username", "sudo removeuser username", "Both A and B"], "correct": 3, "tip": "deluser also has options to remove home directory and mail spool."},
      {"id": "ubuntu_easy_028", "question": "Which command is used to change a user's password?", "options": ["sudo passwd username", "sudo chpasswd username", "sudo setpasswd username", "password username"], "correct": 0, "tip": "passwd changes user passwords."},
      {"id": "ubuntu_easy_029", "question": "Which command is used to view or edit the crontab entries?", "options": ["crontab -e", "edit cron", "crontab -l", "view cron"], "correct": 0, "tip": "crontab -e opens the crontab for editing."},
      {"id": "ubuntu_easy_030", "question": "Which command is used to display kernel information?", "options": ["uname -a", "kernelinfo", "sysinfo", "osinfo"], "correct": 0, "tip": "uname -a shows all system information."},
      {"id": "ubuntu_easy_031", "question": "Which command is used to view available memory and swap space?", "options": ["free -h", "meminfo", "top", "vmstat"], "correct": 0, "tip": "free -h shows human-readable memory info."},
      {"id": "ubuntu_easy_032", "question": "Which command is used to view current directory contents in long list format?", "options": ["ls -l", "ls -a", "ls -F", "ls -R"], "correct": 0, "tip": "-l provides detailed information like permissions, owner, size, date."},
      {"id": "ubuntu_easy_033", "question": "Which command is used to view the contents of a text file page by page?", "options": ["less", "more", "cat", "view"], "correct": 0, "tip": "less is generally preferred over more due to its ability to scroll backward."},
      {"id": "ubuntu_easy_034", "question": "Which command is used to create an empty file or update its timestamp?", "options": ["touch filename", "create filename", "mkfile filename", "newfile filename"], "correct": 0, "tip": "touch is commonly used for creating placeholder files."},
      {"id": "ubuntu_easy_035", "question": "Which command is used to find files by name?", "options": ["find /path -name \"filename\"", "locate filename", "search filename", "Both A and B (with differences)"], "correct": 3, "tip": "`find` searches live, `locate` uses a pre-built database."},
      {"id": "ubuntu_easy_036", "question": "Which command is used to search for text within files?", "options": ["grep \"text\" filename", "find \"text\" filename", "searchtext filename", "matchtext filename"], "correct": 0, "tip": "grep is a powerful tool for pattern matching."},
      {"id": "ubuntu_easy_037", "question": "Which command is used to compress files into a `.zip` archive?", "options": ["zip archive.zip files", "gzip files", "tar -czvf archive.zip files", "compress files"], "correct": 0, "tip": "zip is a cross-platform archiving and compression tool."},
      {"id": "ubuntu_easy_038", "question": "Which command is used to extract files from a `.zip` archive?", "options": ["unzip archive.zip", "gunzip archive.zip", "tar -xf archive.zip", "extract archive.zip"], "correct": 0, "tip": "unzip extracts contents from zip files."},
      {"id": "ubuntu_easy_039", "question": "Which command is used to create a `.tar.gz` archive?", "options": ["tar -czvf archive.tar.gz files", "zip -g archive.tar.gz files", "gzip archive.tar files", "tar -cfz archive.tar.gz files"], "correct": 0, "tip": "The `c` creates, `z` compresses with gzip, `v` is verbose, `f` specifies filename."},
      {"id": "ubuntu_easy_040", "question": "Which command is used to extract a `.tar.gz` archive?", "options": ["tar -xzvf archive.tar.gz", "unzip archive.tar.gz", "gzip -d archive.tar.gz", "extract_tar_gz archive.tar.gz"], "correct": 0, "tip": "The `x` extracts, `z` decompresses with gzip, `v` is verbose, `f` specifies filename."},
      {"id": "ubuntu_easy_041", "question": "How do you mount a USB drive or external storage device?", "options": ["sudo mount /dev/sdb1 /mnt/usb", "mount usb", "plugdev", "attach_usb"], "correct": 0, "tip": "Requires specifying the device and a mount point."},
      {"id": "ubuntu_easy_042", "question": "How do you unmount a mounted device?", "options": ["sudo umount /mnt/usb", "unmount usb", "eject usb", "detach_usb"], "correct": 0, "tip": "umount command unmounts a filesystem."},
      {"id": "ubuntu_easy_043", "question": "Which command is used to display system boot messages?", "options": ["dmesg", "bootlog", "syslog", "messages"], "correct": 0, "tip": "dmesg prints the kernel ring buffer."},
      {"id": "ubuntu_easy_044", "question": "Which command is used to display current system date and time?", "options": ["date", "timedatectl", "datetime", "clock"], "correct": 0, "tip": "date shows current time; timedatectl is for managing system time."},
      {"id": "ubuntu_easy_045", "question": "Which command is used to remotely connect to a server?", "options": ["ssh user@host", "telnet user@host", "remoteconnect", "login host"], "correct": 0, "tip": "ssh (Secure Shell) is the standard for secure remote access."},
      {"id": "ubuntu_easy_046", "question": "Which command is used to securely copy files between local and remote hosts?", "options": ["scp", "rcp", "ftp", "copyremote"], "correct": 0, "tip": "scp uses SSH for secure file transfer."},
      {"id": "ubuntu_easy_047", "question": "Which command is used to list open files by processes?", "options": ["lsof", "openfiles", "filelist", "fuser"], "correct": 0, "tip": "lsof (list open files) is a powerful diagnostic tool."},
      {"id": "ubuntu_easy_048", "question": "Which command is used to view the list of system services and their statuses?", "options": ["systemctl list-units --type=service", "service --status-all", "get_services", "Both A and B"], "correct": 3, "tip": "Both provide service information."},
      {"id": "ubuntu_easy_049", "question": "How do you view recent log messages in Ubuntu?", "options": ["journalctl -xe", "cat /var/log/syslog", "tail -f /var/log/messages", "All of the above (depending on context)"], "correct": 3, "tip": "journalctl is for systemd logs, cat/tail for traditional syslog files."},
      {"id": "ubuntu_easy_050", "question": "Which command is used to restart networking services?", "options": ["sudo systemctl restart networking", "sudo service networking restart", "sudo /etc/init.d/networking restart", "All of the above (depending on Ubuntu version/config)"], "correct": 3, "tip": "Modern Ubuntu uses systemd; older versions used /etc/init.d."},
      {"id": "ubuntu_easy_051", "question": "Which command is used to check installed kernel modules?", "options": ["lsmod", "modinfo", "kernel_modules", "show_modules"], "correct": 0, "tip": "lsmod lists currently loaded kernel modules."},
      {"id": "ubuntu_easy_052", "question": "Which command is used to add a PPA (Personal Package Archive) repository?", "options": ["sudo add-apt-repository ppa:user/repo", "sudo apt-add-repo ppa:user/repo", "sudo ppa-install ppa:user/repo", "sudo apt install ppa:user/repo"], "correct": 0, "tip": "PPAs provide software not in the official repositories."},
      {"id": "ubuntu_easy_053", "question": "How do you check for available security updates?", "options": ["sudo apt list --upgradable", "sudo apt-get check", "sudo apt-get security", "sudo apt update --security"], "correct": 0, "tip": "This shows all upgradable packages, including security updates."},
      {"id": "ubuntu_easy_054", "question": "Which command is used to edit system configuration files (e.g., in /etc)?", "options": ["sudo nano /etc/filename", "sudo vi /etc/filename", "sudo gedit /etc/filename", "All of the above (depending on preference/desktop)"], "correct": 3, "tip": "Use a text editor with root privileges."},
      {"id": "ubuntu_easy_055", "question": "How do you find the process ID (PID) of a running application by its name?", "options": ["pgrep process_name", "pidof process_name", "ps aux | grep process_name", "All of the above"], "correct": 3, "tip": "Various methods exist for finding PIDs."},
      {"id": "ubuntu_easy_056", "question": "Which command is used to suspend a running process?", "options": ["Ctrl+Z", "kill -STOP PID", "suspend PID", "pause PID"], "correct": 0, "tip": "Ctrl+Z sends a SIGSTOP signal to the foreground process."},
      {"id": "ubuntu_easy_057", "question": "How do you bring a suspended process back to the foreground?", "options": ["fg", "bg", "resume", "continue"], "correct": 0, "tip": "fg brings the last suspended job to foreground."},
      {"id": "ubuntu_easy_058", "question": "Which command is used to view the system hostname?", "options": ["hostname", "cat /etc/hostname", "uname -n", "All of the above"], "correct": 3, "tip": "All provide hostname information."},
      {"id": "ubuntu_easy_059", "question": "Which command displays how long the system has been running?", "options": ["uptime", "top", "w", "sys_run_time"], "correct": 0, "tip": "uptime also shows load averages."},
      {"id": "ubuntu_easy_060", "question": "Which command is used to gracefully shut down the Ubuntu system?", "options": ["sudo shutdown now", "sudo poweroff", "sudo halt", "All of the above (with subtle differences)"], "correct": 3, "tip": "shutdown is more flexible for timed shutdowns, poweroff/halt are more immediate."}
    ],
    "medium": [
      {"id": "ubuntu_medium_001", "question": "How do you manage firewall rules in Ubuntu?", "options": ["ufw (Uncomplicated Firewall)", "iptables", "firewalld", "All of the above (depending on setup)"], "correct": 3, "tip": "ufw is the simplest for Ubuntu desktop/server, iptables is lower-level, firewalld for RHEL/CentOS but can be installed."},
      {"id": "ubuntu_medium_002", "question": "What is the purpose of `snap` packages in Ubuntu?", "options": ["A universal Linux packaging system developed by Canonical, providing self-contained applications with dependencies", "A temporary file format", "A package manager for old software", "A tool for system snapshots"], "correct": 0, "tip": "Snaps aim for cross-distribution compatibility and transactional updates."},
      {"id": "ubuntu_medium_003", "question": "How do you set up an SSH server on Ubuntu?", "options": ["sudo apt install openssh-server", "sudo systemctl enable ssh", "sudo ufw allow ssh", "All of the above"], "correct": 3, "tip": "Installation, enabling service, and firewall rules are typical steps."},
      {"id": "ubuntu_medium_004", "question": "How do you create a new user and add them to the `sudo` group?", "options": ["sudo adduser newuser && sudo usermod -aG sudo newuser", "sudo useradd newuser -G sudo", "sudo mkuser newuser -g sudo", "Only root can do this"], "correct": 0, "tip": "adduser is more user-friendly, usermod modifies existing user attributes."},
      {"id": "ubuntu_medium_005", "question": "What is `netplan` used for in modern Ubuntu versions?", "options": ["A YAML-based network configuration abstraction for Linux, replacing traditional network configuration files", "A tool for network monitoring", "A network diagnostic utility", "A command for connecting to VPNs"], "correct": 0, "tip": "Netplan simplifies network setup across different backend renderers."},
      {"id": "ubuntu_medium_006", "question": "How do you find out which process is listening on a specific port?", "options": ["sudo lsof -i :PORT_NUMBER", "sudo netstat -tulnp | grep PORT_NUMBER", "sudo ss -tulnp | grep PORT_NUMBER", "All of the above"], "correct": 3, "tip": "These commands show open sockets and processes."},
      {"id": "ubuntu_medium_007", "question": "What is the purpose of `apt-get clean` and `apt-get autoclean`?", "options": ["`clean` removes downloaded package files from the cache, `autoclean` removes only those that can no longer be downloaded and are of no use", "They both remove installed packages", "They clean up user home directories", "They remove system logs"], "correct": 0, "tip": "Useful for freeing up disk space in `/var/cache/apt/archives`."},
      {"id": "ubuntu_medium_008", "question": "How do you change the default shell for a user?", "options": ["chsh -s /bin/bash username", "usermod -s /bin/bash username", "passwd -s /bin/bash username", "set_shell username /bin/bash"], "correct": 0, "tip": "chsh allows users to change their own login shell."},
      {"id": "ubuntu_medium_009", "question": "What is the purpose of `systemctl daemon-reload`?", "options": ["To reload systemd manager configuration, useful after modifying unit files", "To restart all running daemons", "To unload all daemons", "To update systemd itself"], "correct": 0, "tip": "Ensures systemd recognizes changes to service files without a full reboot."},
      {"id": "ubuntu_medium_010", "question": "How do you view and analyze system journal logs?", "options": ["journalctl", "cat /var/log/syslog", "dmesg", "All of the above (with differences)"], "correct": 0, "tip": "journalctl is the primary tool for querying the systemd journal."},
      {"id": "ubuntu_medium_011", "question": "How do you mount a network share (NFS or SMB/CIFS) on Ubuntu?", "options": ["sudo mount -t nfs server:/share /mnt/nfs", "sudo mount -t cifs //server/share /mnt/cifs -o username=user", "add_network_share", "Both A and B"], "correct": 3, "tip": "Requires installing nfs-common or cifs-utils packages."},
      {"id": "ubuntu_medium_012", "question": "What is the function of `/etc/fstab`?", "options": ["A configuration file that defines how and where filesystems should be mounted at boot time", "A list of installed packages", "A file containing user passwords", "A log file for system errors"], "correct": 0, "tip": "Crucial for persistent mounts."},
      {"id": "ubuntu_medium_013", "question": "How do you enable or disable a PPA repository?", "options": ["sudo add-apt-repository --remove ppa:user/repo", "sudo add-apt-repository --enable ppa:user/repo", "edit /etc/apt/sources.list", "All of the above"], "correct": 3, "tip": "Disabling is often done by removing the 'deb' line or commenting it out."},
      {"id": "ubuntu_medium_014", "question": "What is the significance of the `cloud-init` package in Ubuntu?", "options": ["A package that handles the early initialization of cloud instances, configuring network, users, and hostname", "A tool for managing cloud storage", "A daemon for cloud backup", "A package for cloud gaming"], "correct": 0, "tip": "Standard for configuring VMs on major cloud platforms."},
      {"id": "ubuntu_medium_015", "question": "How do you create a persistent alias in Ubuntu?", "options": ["Add it to `~/.bashrc` or `~/.bash_aliases`", "Use the `alias` command temporarily", "Add to `/etc/bash.bashrc`", "All of the above (with scope differences)"], "correct": 0, "tip": "`~/.bashrc` is loaded for interactive non-login shells."},
      {"id": "ubuntu_medium_016", "question": "What is `udev` in Ubuntu and its purpose?", "options": ["The device manager for the Linux kernel, managing device nodes in `/dev` and handling hotplugging", "A user directory manager", "A network device utility", "A video driver manager"], "correct": 0, "tip": "udev rules dictate how devices are detected and configured."},
      {"id": "ubuntu_medium_017", "question": "How do you change the system timezone in Ubuntu?", "options": ["sudo timedatectl set-timezone Region/City", "sudo dpkg-reconfigure tzdata", "sudo date --set=\"TIMEZONE\"", "Both A and B"], "correct": 3, "tip": "timedatectl is modern, dpkg-reconfigure tzdata is traditional."},
      {"id": "ubuntu_medium_018", "question": "What is the purpose of `rsyslog` in Ubuntu?", "options": ["A high-performance system for logging (collecting, processing, and forwarding log messages)", "A tool for remote system access", "A package for creating system backups", "A network protocol for file transfer"], "correct": 0, "tip": "The default logging daemon in Ubuntu."},
      {"id": "ubuntu_medium_019", "question": "How do you check for and remove broken packages in Ubuntu?", "options": ["sudo apt --fix-broken install", "sudo dpkg --configure -a", "sudo apt clean && sudo apt autoremove", "All of the above (depending on the issue)"], "correct": 3, "tip": "`--fix-broken install` attempts to resolve unmet dependencies."},
      {"id": "ubuntu_medium_020", "question": "What is a `swap file` and how do you create one in Ubuntu?", "options": ["A file used as virtual memory when RAM is full, created with `fallocate` or `dd`, then `mkswap` and `swapon`", "A temporary file for storing data", "A type of log file", "A file for storing user settings"], "correct": 0, "tip": "Provides an alternative to a dedicated swap partition."},
      {"id": "ubuntu_medium_021", "question": "How do you manage cron jobs for specific users?", "options": ["sudo crontab -u username -e", "edit /etc/cron.d/username", "crontab -e", "usercron username -e"], "correct": 0, "tip": "`crontab -u` allows root to edit other users' crontabs."},
      {"id": "ubuntu_medium_022", "question": "What is the purpose of `apport` in Ubuntu?", "options": ["A system that automatically collects crash reports and sends them to Ubuntu for bug tracking and analysis", "A tool for application deployment", "A package manager for development tools", "A system for user authentication"], "correct": 0, "tip": "Helps improve Ubuntu's stability by reporting software failures."},
      {"id": "ubuntu_medium_023", "question": "How do you transfer files from a remote Ubuntu server to your local machine using `scp`?", "options": ["scp user@remote_host:/path/to/remote/file /path/to/local/destination", "scp /path/to/local/file user@remote_host:/path/to/remote/destination", "ssh copy user@remote_host", "wget user@remote_host/file"], "correct": 0, "tip": "The source comes first, then the destination."},
      {"id": "ubuntu_medium_024", "question": "What is `LVM (Logical Volume Manager)` in Ubuntu and its benefits?", "options": ["A system that provides flexible disk management (e.g., resizing partitions, creating snapshots) by abstracting physical storage", "A tool for managing user accounts", "A network configuration utility", "A file compression tool"], "correct": 0, "tip": "LVM adds a layer of abstraction over physical disks."},
      {"id": "ubuntu_medium_025", "question": "How do you enable or disable `IPv6` in Ubuntu?", "options": ["Modify `/etc/default/grub` and update grub, or use `sysctl` settings", "It's automatically enabled/disabled", "Cannot be controlled by user", "Using `ifconfig` commands"], "correct": 0, "tip": "Requires kernel parameter modification for full disablement."}
    ],
    "hard": [
      {"id": "ubuntu_hard_001", "question": "Explain the `systemd` boot process in Ubuntu and key targets/units.", "options": ["BIOS/UEFI -> Bootloader (GRUB) -> Kernel -> initramfs -> systemd -> various targets (e.g., `multi-user.target`, `graphical.target`)", "Kernel -> Applications -> Desktop", "Bootloader -> initramfs -> User Login", "systemd starts after user logs in"], "correct": 0, "tip": "systemd manages services and targets for different boot states."},
      {"id": "ubuntu_hard_002", "question": "Describe `AppArmor` in Ubuntu and how it enhances security.", "options": ["A Mandatory Access Control (MAC) system that restricts programs' capabilities by confining them to a limited set of resources based on profiles", "A tool for encrypting user data", "A network firewall for applications", "A system for managing user permissions"], "correct": 0, "tip": "AppArmor helps prevent attacks by limiting what even compromised applications can do."},
      {"id": "ubuntu_hard_003", "question": "How do you troubleshoot a service that fails to start using `journalctl`?", "options": ["`journalctl -u service_name` to view logs for the specific unit, and `journalctl -xe` for detailed error information", "Check `dmesg` only", "Restart the service repeatedly", "Reinstall the service"], "correct": 0, "tip": "journalctl is central for systemd service debugging."},
      {"id": "ubuntu_hard_004", "question": "Explain the difference between `apt`, `apt-get`, and `dpkg`.", "options": ["`apt` is a high-level, user-friendly command for package management; `apt-get` is an older, lower-level command, and `dpkg` is the lowest-level tool for managing individual .deb packages", "They are all identical", "apt is only for installing, apt-get for removing", "dpkg handles repositories"], "correct": 0, "tip": "apt provides a better user experience for common tasks."},
      {"id": "ubuntu_hard_005", "question": "How do you configure `logrotate` for custom application logs?", "options": ["By creating a new configuration file in `/etc/logrotate.d/` and defining rules for rotation, compression, and retention", "logrotate is only for system logs", "By directly editing `/etc/logrotate.conf`", "By adding lines to `crontab`"], "correct": 0, "tip": "Ensures logs don't fill up disk space and are properly managed."},
      {"id": "ubuntu_hard_006", "question": "What is the purpose of `netfilter` and `iptables` in Ubuntu?", "options": ["`netfilter` is the kernel-level framework for packet filtering and manipulation, `iptables` is the user-space utility to configure `netfilter` rules (i.e., firewall rules)", "They are for network monitoring only", "They are for VPN connections", "They manage network interfaces"], "correct": 0, "tip": "iptables is the traditional way to manage the Linux firewall."},
      {"id": "ubuntu_hard_007", "question": "Describe the process of building a custom kernel in Ubuntu.", "options": ["Obtain kernel source, configure (e.g., `make menuconfig`), compile (`make -jN`), install modules, install kernel (`make install`), update GRUB", "Requires specific programming knowledge only", "Done automatically by system updates", "Only possible with specific hardware"], "correct": 0, "tip": "Advanced task for specific hardware support or optimizations."},
      {"id": "ubuntu_hard_008", "question": "How do you perform a kernel upgrade in Ubuntu beyond standard `apt upgrade`?", "options": ["By installing specific kernel meta-packages (`linux-image-generic-hwe-VERSION`), or by manually downloading and installing `.deb` packages from Ubuntu's kernel archives", "It's not possible to upgrade kernel independently", "Only through compilation", "Using a graphical tool"], "correct": 0, "tip": "HWE kernels provide newer hardware support on LTS releases."},
      {"id": "ubuntu_hard_009", "question": "Explain `cgroups` in Ubuntu and their role in resource management.", "options": ["Control Groups, a Linux kernel feature that allows limiting, accounting for, and isolating resource usage (CPU, memory, I/O, network) for groups of processes, fundamental for containers", "A tool for group management", "A system for file permissions", "A network configuration utility"], "correct": 0, "tip": "cgroups enable resource isolation for Docker, LXC, etc."},
      {"id": "ubuntu_hard_010", "question": "What is `LXC (Linux Containers)` in Ubuntu and how does it compare to Docker?", "options": ["LXC provides OS-level virtualization, creating isolated environments that feel like full Linux installations, while Docker focuses on application-level containerization with a more lightweight approach (sharing kernel)", "LXC is older and no longer used", "Docker is built on LXC", "LXC is a virtual machine, Docker is a container"], "correct": 0, "tip": "LXC is more like a lightweight VM; Docker is optimized for microservices."},
      {"id": "ubuntu_hard_011", "question": "How do you perform a system wide rollback of package updates if something breaks?", "options": ["Using `apt history` and `apt rollback`, or `timeshift` for system snapshots, or restoring from a backup", "It's not possible to rollback updates", "Only by reinstalling the OS", "By manually downgrading each package"], "correct": 0, "tip": "Tools like `timeshift` provide robust system snapshots for recovery."},
      {"id": "ubuntu_hard_012", "question": "Describe the `udev` rule system and how to create custom rules.", "options": ["A mechanism for device management that dynamically creates and manages device nodes in `/dev`. Custom rules in `/etc/udev/rules.d/` can define actions based on device attributes.", "udev only creates rules automatically", "udev is for network rules only", "Custom udev rules are not possible"], "correct": 0, "tip": "udev rules are crucial for consistent device naming or specific actions on hotplug events."},
      {"id": "ubuntu_hard_013", "question": "What is `Multipath I/O` in Ubuntu and when is it used?", "options": ["A technique for creating multiple I/O paths to a storage device, enhancing fault tolerance and performance, commonly used with SANs", "A tool for network load balancing", "A method for encrypting disk drives", "A type of filesystem"], "correct": 0, "tip": "Provides redundancy and throughput for enterprise storage."},
      {"id": "ubuntu_hard_014", "question": "How do you implement `bonding` or `teaming` for network interfaces in Ubuntu?", "options": ["By configuring `netplan` or using `ifenslave` with network scripts, combining multiple network interfaces into a single logical interface for redundancy or increased bandwidth", "It's a hardware-only feature", "It's deprecated in modern Ubuntu", "Only for wireless interfaces"], "correct": 0, "tip": "Increases network reliability and/or throughput."},
      {"id": "ubuntu_hard_015", "question": "Explain the concept of `LXC containers` and their isolation mechanisms.", "options": ["LXC uses Linux kernel features like namespaces (PID, mount, network, UTS, IPC, user) and cgroups to provide lightweight, isolated user-space environments for applications, sharing the host kernel but with separate resources", "LXC uses full virtualization", "LXC uses only chroot for isolation", "LXC does not provide isolation"], "correct": 0, "tip": "Namespaces and cgroups are core to containerization."},
      {"id": "ubuntu_hard_016", "question": "What are `Ubuntu Flavors` (e.g., Kubuntu, Xubuntu, Lubuntu) and how do they differ?", "options": ["Official derivatives of Ubuntu that use different desktop environments (KDE, Xfce, LXQt respectively) but share the same base system", "Completely different operating systems", "Different versions of the same desktop environment", "Different kernel versions"], "correct": 0, "tip": "They offer different user experiences while maintaining the core Ubuntu base."},
      {"id": "ubuntu_hard_017", "question": "How do you diagnose and fix `systemd` unit file errors?", "options": ["Using `systemd-analyze verify`, `systemctl status <unit>`, and examining logs with `journalctl -u <unit>` for syntax and dependency issues", "Editing unit files randomly", "Reinstalling the entire service", "Ignoring the error messages"], "correct": 0, "tip": "systemd provides powerful tools for unit file validation and debugging."},
      {"id": "ubuntu_hard_018", "question": "Explain the `Debian Policy Manual` and its relevance to Ubuntu package development.", "options": ["A fundamental document outlining rules and guidelines for packaging software for Debian (and by extension Ubuntu), ensuring consistency and quality", "A manual for using Debian", "A guide for kernel development", "A document on network security"], "correct": 0, "tip": "Crucial for anyone involved in creating or maintaining .deb packages."},
      {"id": "ubuntu_hard_019", "question": "What is `LXD` and how does it relate to LXC and virtual machines?", "options": ["`LXD` is a next-generation system container manager, built on LXC, offering a superior user experience, live migration, and integration with cloud tools, blurring the lines between containers and VMs in terms of management", "LXD is a replacement for Docker", "LXD is a full virtualization hypervisor", "LXD is only for command-line tools"], "correct": 0, "tip": "LXD manages LXC containers, providing VM-like features for containers."},
      {"id": "ubuntu_hard_020", "question": "How do you configure a `Bonding` interface in Netplan?", "options": ["By defining a `bond` interface type in the Netplan YAML configuration, specifying member interfaces and bonding mode (e.g., active-backup, balance-rr)", "Netplan does not support bonding", "By manually configuring `/etc/network/interfaces`", "Using a graphical network manager only"], "correct": 0, "tip": "Netplan simplifies complex network configurations like bonding."},
      {"id": "ubuntu_hard_021", "question": "What is the role of `snapd` in the Ubuntu ecosystem?", "options": ["`snapd` is the daemon that enables snap package management, handling installation, updates, confinement, and security of snap applications", "It's a simple package installer", "It manages traditional .deb packages", "It's a desktop environment component"], "correct": 0, "tip": "snapd is the engine behind snaps."},
      {"id": "ubuntu_hard_022", "question": "Explain the `APT pinning` mechanism and its use cases.", "options": ["A method to control which package versions are preferred from different repositories, useful for installing specific versions or backports, or testing unstable packages without affecting the whole system", "A way to pin packages to a specific location", "A security feature to block malicious packages", "A tool for package auditing"], "correct": 0, "tip": "Configured in `/etc/apt/preferences.d/`."},
      {"id": "ubuntu_hard_023", "question": "How do you integrate `Ansible`, `Chef`, or `Puppet` for configuration management on Ubuntu servers?", "options": ["By installing the respective agent/controller on the Ubuntu server and defining playbooks/cookbooks/manifests to automate system configuration and deployment", "These tools are not compatible with Ubuntu", "Only for managing cloud instances", "They only manage applications, not system configuration"], "correct": 0, "tip": "Popular tools for automating server provisioning and management."},
      {"id": "ubuntu_hard_024", "question": "What is `Btrfs` and how can it be leveraged in Ubuntu (e.g., for snapshots)?", "options": ["A modern copy-on-write (CoW) filesystem for Linux that supports features like snapshots, subvolumes, RAID, and self-healing. Snapshots can be created and managed for system recovery.", "A traditional journaling filesystem", "A network file system", "A cloud storage solution"], "correct": 0, "tip": "Offers advanced data management features beyond ext4."},
      {"id": "ubuntu_hard_025", "question": "Describe `Secure Boot` and its interaction with Ubuntu installations.", "options": ["A UEFI firmware feature designed to prevent malicious software from loading during the boot process by only allowing signed bootloaders and kernel modules. Ubuntu can be installed with Secure Boot enabled.", "A feature that encrypts the boot partition", "A method for faster booting", "A security feature for remote logins"], "correct": 0, "tip": "Ensures the integrity of the boot chain."},
      {"id": "ubuntu_hard_026", "question": "What is `Livepatch` in Ubuntu and its benefits?", "options": ["A service that allows applying critical kernel security updates without requiring a reboot, minimizing downtime for servers and critical systems", "A tool for patching applications", "A method for system recovery", "A feature for installing new kernels"], "correct": 0, "tip": "Specifically targets critical kernel vulnerabilities."}
    ]
  },
  "rhel": {
    "easy": [
      {"id": "rhel_easy_001", "question": "Which package manager is primarily used in RHEL/CentOS?", "options": ["yum", "dnf", "rpm", "All of the above (dnf is newer, yum is older, rpm is low-level)"], "correct": 3, "tip": "dnf is the modern successor to yum."},
      {"id": "rhel_easy_002", "question": "Which command is used to update the package lists/cache in RHEL/CentOS?", "options": ["yum makecache", "dnf makecache", "yum update", "dnf update"], "correct": 1, "tip": "dnf makecache is for refreshing repository metadata."},
      {"id": "rhel_easy_003", "question": "Which command is used to install new packages in RHEL/CentOS?", "options": ["sudo dnf install package_name", "sudo yum install package_name", "install package_name", "Both A and B"], "correct": 3, "tip": "Both `dnf` and `yum` can be used for installation."},
      {"id": "rhel_easy_004", "question": "Which command is used to remove packages in RHEL/CentOS?", "options": ["sudo dnf remove package_name", "sudo yum remove package_name", "remove package_name", "uninstall package_name"], "correct": 3, "tip": "Both `dnf` and `yum` support package removal."},
      {"id": "rhel_easy_005", "question": "Which command is used to upgrade all installed packages to their latest versions?", "options": ["sudo dnf update", "sudo yum update", "sudo dnf upgrade", "All of the above (update and upgrade are often synonymous)"], "correct": 3, "tip": "`update` and `upgrade` typically perform the same action in dnf/yum."},
      {"id": "rhel_easy_006", "question": "Which command is used to search for a package in RHEL/CentOS repositories?", "options": ["dnf search package_name", "yum search package_name", "search-package package_name", "Both A and B"], "correct": 3, "tip": "Searches package names and descriptions."},
      {"id": "rhel_easy_007", "question": "How do you check the RHEL/CentOS version?", "options": ["cat /etc/redhat-release", "cat /etc/os-release", "hostnamectl", "All of the above"], "correct": 3, "tip": "Different commands provide various levels of detail."},
      {"id": "rhel_easy_008", "question": "Which command is used to view running processes in real-time with resource usage?", "options": ["top", "ps", "htop", "glances"], "correct": 0, "tip": "top is a common utility, htop is an enhanced version."},
      {"id": "rhel_easy_009", "question": "Which command is used to terminate a process by its PID?", "options": ["kill PID", "killall process_name", "pkill process_name", "stop PID"], "correct": 0, "tip": "kill sends a signal to a process."},
      {"id": "rhel_easy_010", "question": "Which command is used to view disk space usage?", "options": ["df -h", "du -h", "diskfree", "freespace"], "correct": 0, "tip": "df shows filesystem disk space usage."},
      {"id": "rhel_easy_011", "question": "Which command is used to view directory disk usage?", "options": ["du -sh", "df -h", "dirsize", "folder_usage"], "correct": 0, "tip": "du summarizes disk usage for files and directories."},
      {"id": "rhel_easy_012", "question": "How do you set file permissions in RHEL/CentOS?", "options": ["chmod", "chown", "setperm", "perm"], "correct": 0, "tip": "chmod modifies file and directory permissions."},
      {"id": "rhel_easy_013", "question": "How do you change the owner of a file or directory?", "options": ["chown", "chmod", "setowner", "owner"], "correct": 0, "tip": "chown changes file ownership."},
      {"id": "rhel_easy_014", "question": "Which command is used to display network configuration (IP address, etc.)?", "options": ["ip a", "ifconfig", "nmcli device show", "All of the above"], "correct": 3, "tip": "`ip a` is preferred, `ifconfig` is legacy, `nmcli` is for NetworkManager."},
      {"id": "rhel_easy_015", "question": "Which command is used to check network connectivity to a host?", "options": ["ping", "netcheck", "testconn", "conn"], "correct": 0, "tip": "ping tests host reachability."},
      {"id": "rhel_easy_016", "question": "How do you switch to the root user in RHEL/CentOS?", "options": ["su -", "sudo -i", "sudo su -", "All of the above"], "correct": 3, "tip": "These commands provide a root shell."},
      {"id": "rhel_easy_017", "question": "Which command is used to list currently logged-in users?", "options": ["who", "w", "users", "All of the above"], "correct": 3, "tip": "Different commands offer varying levels of detail about logged-in users."},
      {"id": "rhel_easy_018", "question": "Which command is used to manage system services (start, stop, enable)?", "options": ["systemctl", "service", "chkconfig", "control"], "correct": 0, "tip": "systemctl is the primary tool for systemd-based RHEL."},
      {"id": "rhel_easy_019", "question": "How do you view the content of an `.rpm` package?", "options": ["rpm -qlp package.rpm", "rpm -qip package.rpm", "rpm -ql package.rpm", "lsrpm package.rpm"], "correct": 0, "tip": "-q for query, -l for list files, -p for package file."},
      {"id": "rhel_easy_020", "question": "Which command is used to install a local `.rpm` file?", "options": ["sudo rpm -i package.rpm", "sudo dnf install package.rpm", "sudo yum localinstall package.rpm", "All of the above (with dnf/yum handling dependencies)"], "correct": 3, "tip": "dnf/yum will resolve dependencies, rpm will not."},
      {"id": "rhel_easy_021", "question": "Which command is used to remove unused dependencies in RHEL/CentOS?", "options": ["sudo dnf autoremove", "sudo yum autoremove", "sudo dnf clean", "Both A and B"], "correct": 3, "tip": "autoremove cleans up packages installed as dependencies no longer needed."},
      {"id": "rhel_easy_022", "question": "How do you check the status of a system service?", "options": ["systemctl status service_name", "service service_name status", "status service_name", "Both A and B"], "correct": 3, "tip": "systemctl is preferred for systemd services."},
      {"id": "rhel_easy_023", "question": "Which command is used to enable a system service to start on boot?", "options": ["sudo systemctl enable service_name", "sudo chkconfig service_name on", "sudo systemd_enable service_name", "sudo bootenable service_name"], "correct": 0, "tip": "systemctl manages systemd service startup behavior."},
      {"id": "rhel_easy_024", "question": "Which command is used to disable a system service from starting on boot?", "options": ["sudo systemctl disable service_name", "sudo chkconfig service_name off", "sudo systemd_disable service_name", "sudo bootdisable service_name"], "correct": 0, "tip": "Reverses the enable action for systemd services."},
      {"id": "rhel_easy_025", "question": "How do you add a new user in RHEL/CentOS?", "options": ["sudo useradd username", "sudo adduser username", "sudo newuser username", "Both A and B"], "correct": 0, "tip": "useradd is the standard command-line utility for creating new user accounts."},
      {"id": "rhel_easy_026", "question": "How do you delete a user in RHEL/CentOS?", "options": ["sudo userdel username", "sudo deluser username", "sudo removeuser username", "Both A and B"], "correct": 0, "tip": "userdel removes a user account."},
      {"id": "rhel_easy_027", "question": "Which command is used to change a user's password?", "options": ["sudo passwd username", "sudo chpasswd username", "sudo setpasswd username", "password username"], "correct": 0, "tip": "passwd is used to change passwords for user accounts."},
      {"id": "rhel_easy_028", "question": "Which command is used to view or edit the crontab entries?", "options": ["crontab -e", "edit cron", "crontab -l", "view cron"], "correct": 0, "tip": "crontab -e opens the user's crontab for editing."},
      {"id": "rhel_easy_029", "question": "Which command is used to display kernel information?", "options": ["uname -a", "kernelinfo", "sysinfo", "osinfo"], "correct": 0, "tip": "uname -a displays all system information."},
      {"id": "rhel_easy_030", "question": "Which command is used to view available memory and swap space?", "options": ["free -h", "meminfo", "top", "vmstat"], "correct": 0, "tip": "free -h shows human-readable memory statistics."},
      {"id": "rhel_easy_031", "question": "Which command is used to view current directory contents in long list format?", "options": ["ls -l", "ls -a", "ls -F", "ls -R"], "correct": 0, "tip": "-l provides detailed file information."},
      {"id": "rhel_easy_032", "question": "Which command is used to view the contents of a text file page by page?", "options": ["less", "more", "cat", "view"], "correct": 0, "tip": "less is generally preferred for large files."},
      {"id": "rhel_easy_033", "question": "Which command is used to create an empty file or update its timestamp?", "options": ["touch filename", "create filename", "mkfile filename", "newfile filename"], "correct": 0, "tip": "touch updates file access and modification times, or creates the file."},
      {"id": "rhel_easy_034", "question": "Which command is used to find files by name?", "options": ["find /path -name \"filename\"", "locate filename", "search filename", "Both A and B (with differences)"], "correct": 3, "tip": "`find` searches the filesystem directly, `locate` uses a pre-built database."},
      {"id": "rhel_easy_035", "question": "Which command is used to search for text within files?", "options": ["grep \"text\" filename", "find \"text\" filename", "searchtext filename", "matchtext filename"], "correct": 0, "tip": "grep is a powerful tool for pattern matching in files."},
      {"id": "rhel_easy_036", "question": "Which command is used to compress files into a `.zip` archive?", "options": ["zip archive.zip files", "gzip files", "tar -czvf archive.zip files", "compress files"], "correct": 0, "tip": "zip creates and manages .zip archives."},
      {"id": "rhel_easy_037", "question": "Which command is used to extract files from a `.zip` archive?", "options": ["unzip archive.zip", "gunzip archive.zip", "tar -xf archive.zip", "extract archive.zip"], "correct": 0, "tip": "unzip extracts files from .zip archives."},
      {"id": "rhel_easy_038", "question": "Which command is used to create a `.tar.gz` archive?", "options": ["tar -czvf archive.tar.gz files", "zip -g archive.tar.gz files", "gzip archive.tar files", "tar -cfz archive.tar.gz files"], "correct": 0, "tip": "The `c` creates, `z` compresses with gzip, `v` is verbose, `f` specifies filename."},
      {"id": "rhel_easy_039", "question": "Which command is used to extract a `.tar.gz` archive?", "options": ["tar -xzvf archive.tar.gz", "unzip archive.tar.gz", "gzip -d archive.tar.gz", "extract_tar_gz archive.tar.gz"], "correct": 0, "tip": "The `x` extracts, `z` decompresses with gzip, `v` is verbose, `f` specifies filename."},
      {"id": "rhel_easy_040", "question": "How do you mount a USB drive or external storage device?", "options": ["sudo mount /dev/sdb1 /mnt/usb", "mount usb", "plugdev", "attach_usb"], "correct": 0, "tip": "Requires specifying the device and a mount point."},
      {"id": "rhel_easy_041", "question": "How do you unmount a mounted device?", "options": ["sudo umount /mnt/usb", "unmount usb", "eject usb", "detach_usb"], "correct": 0, "tip": "umount command unmounts a filesystem."},
      {"id": "rhel_easy_042", "question": "Which command is used to display system boot messages?", "options": ["dmesg", "bootlog", "syslog", "messages"], "correct": 0, "tip": "dmesg prints the kernel ring buffer."},
      {"id": "rhel_easy_043", "question": "Which command is used to display current system date and time?", "options": ["date", "timedatectl", "datetime", "clock"], "correct": 0, "tip": "date shows current time; timedatectl manages system time and date settings."},
      {"id": "rhel_easy_044", "question": "Which command is used to remotely connect to a server?", "options": ["ssh user@host", "telnet user@host", "remoteconnect", "login host"], "correct": 0, "tip": "ssh (Secure Shell) is the secure standard."},
      {"id": "rhel_easy_045", "question": "Which command is used to securely copy files between local and remote hosts?", "options": ["scp", "rcp", "ftp", "copyremote"], "correct": 0, "tip": "scp uses SSH for data transfer."},
      {"id": "rhel_easy_046", "question": "Which command is used to list open files by processes?", "options": ["lsof", "openfiles", "filelist", "fuser"], "correct": 0, "tip": "lsof (list open files) is a powerful diagnostic utility."},
      {"id": "rhel_easy_047", "question": "Which command is used to view the list of system services and their statuses?", "options": ["systemctl list-units --type=service", "service --status-all", "get_services", "Both A and B (depending on version/config)"], "correct": 3, "tip": "systemctl is the modern approach."},
      {"id": "rhel_easy_048", "question": "How do you view recent log messages in RHEL/CentOS?", "options": ["journalctl -xe", "cat /var/log/messages", "tail -f /var/log/boot.log", "All of the above (depending on context)"], "correct": 3, "tip": "journalctl for systemd logs, traditional for older logs."},
      {"id": "rhel_easy_049", "question": "Which command is used to restart networking services?", "options": ["sudo systemctl restart network", "sudo service network restart", "sudo /etc/init.d/network restart", "All of the above (depending on RHEL version/config)"], "correct": 3, "tip": "Modern RHEL uses systemd with `network` or `NetworkManager` service."},
      {"id": "rhel_easy_050", "question": "Which command is used to check installed kernel modules?", "options": ["lsmod", "modinfo", "kernel_modules", "show_modules"], "correct": 0, "tip": "lsmod lists loaded kernel modules."},
      {"id": "rhel_easy_051", "question": "Which command is used to manage SELinux modes?", "options": ["getenforce", "setenforce", "sestatus", "All of the above"], "correct": 3, "tip": "getenforce shows current mode, setenforce changes it, sestatus shows status and policy."},
      {"id": "rhel_easy_052", "question": "How do you check for available security updates?", "options": ["sudo dnf check-update --security", "sudo yum check-update --security", "sudo dnf updateinfo list security", "All of the above"], "correct": 3, "tip": "Specific commands to list security-related updates."},
      {"id": "rhel_easy_053", "question": "Which command is used to edit system configuration files (e.g., in /etc)?", "options": ["sudo vi /etc/filename", "sudo nano /etc/filename", "sudo gedit /etc/filename", "All of the above (depending on preference/desktop)"], "correct": 3, "tip": "Use a text editor with root privileges."},
      {"id": "rhel_easy_054", "question": "How do you find the process ID (PID) of a running application by its name?", "options": ["pgrep process_name", "pidof process_name", "ps aux | grep process_name", "All of the above"], "correct": 3, "tip": "Multiple ways to find a process's PID."},
      {"id": "rhel_easy_055", "question": "Which command is used to suspend a running process?", "options": ["Ctrl+Z", "kill -STOP PID", "suspend PID", "pause PID"], "correct": 0, "tip": "Ctrl+Z sends a SIGSTOP signal to the foreground process."},
      {"id": "rhel_easy_056", "question": "How do you bring a suspended process back to the foreground?", "options": ["fg", "bg", "resume", "continue"], "correct": 0, "tip": "fg brings the last suspended job to foreground."},
      {"id": "rhel_easy_057", "question": "Which command is used to view the system hostname?", "options": ["hostname", "hostnamectl", "uname -n", "All of the above"], "correct": 3, "tip": "All provide hostname information; hostnamectl provides more detailed system info."},
      {"id": "rhel_easy_058", "question": "Which command displays how long the system has been running?", "options": ["uptime", "top", "w", "sys_run_time"], "correct": 0, "tip": "uptime also shows load averages."},
      {"id": "rhel_easy_059", "question": "Which command is used to gracefully shut down the RHEL system?", "options": ["sudo shutdown now", "sudo poweroff", "sudo halt", "All of the above (with subtle differences)"], "correct": 3, "tip": "shutdown is more flexible for timed shutdowns, poweroff/halt are immediate."},
      {"id": "rhel_easy_060", "question": "What is the primary configuration file for network interfaces in older RHEL/CentOS?", "options": ["/etc/sysconfig/network-scripts/ifcfg-eth0", "/etc/network/interfaces", "/etc/netplan/*.yaml", "/etc/networkmanager/system-connections/"], "correct": 0, "tip": "This file defined interface settings (IP, subnet, gateway)."}
    ],
	"medium": [
      { "id": "rhel_medium_001", "question": "How do you check the available disk space on RHEL?", "options": ["df -h", "du -sh", "free -m", "lsblk"], "correct": 0, "tip": "`df -h` shows disk space usage in human-readable format." },
      { "id": "rhel_medium_002", "question": "What command is used to list currently running processes in RHEL?", "options": ["ps aux", "top", "htop", "pgrep"], "correct": 0, "tip": "`ps aux` provides a snapshot of current processes. `top` shows a real-time view." },
      { "id": "rhel_medium_003", "question": "How can you view the system journal/logs in RHEL 7/8?", "options": ["journalctl", "cat /var/log/messages", "dmesg", "less /var/log/syslog"], "correct": 0, "tip": "`journalctl` is the primary tool for querying and displaying logs from the systemd journal." },
      { "id": "rhel_medium_004", "question": "Which command is used to check the network configuration of an interface in RHEL?", "options": ["ip addr show", "ifconfig", "netstat -tuln", "nmcli device show"], "correct": 0, "tip": "`ip addr show` (or `ip a`) is the modern way to display network interface addresses. `ifconfig` is deprecated in newer RHEL versions." },
      { "id": "rhel_medium_005", "question": "How do you enable a service to start automatically at boot time in RHEL 7/8?", "options": ["systemctl enable servicename", "chkconfig servicename on", "service servicename enable", "update-rc.d servicename enable"], "correct": 0, "tip": "`systemctl enable` creates a symbolic link for the service to start on boot." },
      { "id": "rhel_medium_006", "question": "What command is used to restart the network service in RHEL 7/8?", "options": ["systemctl restart NetworkManager", "service network restart", "/etc/init.d/network restart", "ifdown/ifup"], "correct": 0, "tip": "`NetworkManager` is the default network management service in modern RHEL versions. Restarting it affects all interfaces managed by it." },
      { "id": "rhel_medium_007", "question": "How do you temporarily disable SELinux on RHEL?", "options": ["setenforce 0", "getenforce permissive", "sedispatch disable", "selinuxoff"], "correct": 0, "tip": "`setenforce 0` sets SELinux to permissive mode until the next reboot. For persistent changes, edit `/etc/selinux/config`." },
      { "id": "rhel_medium_008", "question": "Which command allows you to switch between runlevels (targets) in RHEL 7/8?", "options": ["systemctl isolate target_name.target", "init N", "telinit N", "runlevel"], "correct": 0, "tip": "`systemctl isolate` is used to change to a specific systemd target (equivalent to runlevels)." },
      { "id": "rhel_medium_009", "question": "How do you list all installed RPM packages on a RHEL system?", "options": ["rpm -qa", "yum list installed", "dnf list installed", "get-packages"], "correct": 0, "tip": "`rpm -qa` lists all queryable RPM packages." },
      { "id": "rhel_medium_010", "question": "What is the command to view the system's hostname in RHEL?", "options": ["hostname", "uname -n", "cat /etc/hostname", "sysctl kernel.hostname"], "correct": 0, "tip": "`hostname` displays the system's current hostname." },
      { "id": "rhel_medium_011", "question": "How do you check the default gateway on a RHEL system?", "options": ["ip route show default", "route -n", "netstat -r", "ip gateway"], "correct": 0, "tip": "`ip route show default` shows the default route, which includes the gateway." },
      { "id": "rhel_medium_012", "question": "Which file is commonly used to configure network interfaces persistently in older RHEL versions (e.g., RHEL 6) or for manual configuration in newer ones?", "options": ["/etc/sysconfig/network-scripts/ifcfg-eth0", "/etc/network/interfaces", "/etc/netplan/*.yaml", "/etc/udev/rules.d/70-persistent-net.rules"], "correct": 0, "tip": "In older RHEL, `ifcfg-` files were standard. In RHEL 7/8, NetworkManager manages interfaces, but these files can still be used for manual configuration." },
      { "id": "rhel_medium_013", "question": "What is the purpose of the `firewall-cmd` utility in RHEL?", "options": ["To manage the firewalld daemon", "To configure iptables rules directly", "To check network connectivity", "To inspect network packets"], "correct": 0, "tip": "`firewall-cmd` is the command-line client for the `firewalld` daemon, used to manage firewall rules." },
      { "id": "rhel_medium_014", "question": "How do you check the version of RHEL installed?", "options": ["cat /etc/redhat-release", "lsb_release -a", "uname -a", "rpm --version"], "correct": 0, "tip": "`cat /etc/redhat-release` displays the specific RHEL release version." },
      { "id": "rhel_medium_015", "question": "Which directory contains configuration files for services managed by systemd?", "options": ["/etc/systemd/system/", "/usr/lib/systemd/system/", "/run/systemd/system/", "/var/lib/systemd/"], "correct": 0, "tip": "Both `/etc/systemd/system/` (for custom configurations) and `/usr/lib/systemd/system/` (for installed packages) contain service unit files." }
    ],
    "hard": [
      { "id": "rhel_hard_001", "question": "Explain the difference between a `systemd .service` unit file and a `systemd .target` unit file.", "options": ["Service units define how a daemon starts; target units group services and other targets.", "Service units are for network services; target units are for local services.", "Service units run once; target units run continuously.", "Service units are user-defined; target units are system-defined."], "correct": 0, "tip": "Service units describe how to control a process, while target units act as synchronization points or groups of other units." },
      { "id": "rhel_hard_002", "question": "How would you create a new logical volume (LV) named `data_lv` of 10GB from a volume group (VG) named `my_vg`?", "options": ["lvcreate -L 10G -n data_lv my_vg", "vgcreate my_vg data_lv 10G", "lvcreate -s 10G data_lv my_vg", "mkfs.ext4 /dev/my_vg/data_lv"], "correct": 0, "tip": "`lvcreate` is used to create logical volumes, specifying size (`-L`) and name (`-n`)." },
      { "id": "rhel_hard_003", "question": "Describe the steps to set up a software RAID1 array using `mdadm` with two new partitions `/dev/sdb1` and `/dev/sdc1`.", "options": ["1. Partition disks. 2. `mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sdb1 /dev/sdc1`. 3. `mkfs.ext4 /dev/md0`. 4. Mount and add to `/etc/fstab`.", "1. `mdadm --add /dev/md0 /dev/sdb1 /dev/sdc1`. 2. `mkfs`. 3. Mount.", "1. `fdisk /dev/sdb`, `fdisk /dev/sdc`. 2. `raidgen /dev/md0`. 3. `mount`.", "1. Create partitions. 2. `lvm create raid1 /dev/sdb1 /dev/sdc1`."], "correct": 0, "tip": "The `mdadm --create` command is fundamental for creating new RAID arrays. Remember to partition the disks first and then format the RAID device." },
      { "id": "rhel_hard_004", "question": "You need to automate a task to run every 15 minutes. Which utility would you use and how would you configure it?", "options": ["Cron, by adding an entry like `*/15 * * * * /path/to/script.sh` to a crontab.", "Anacron, by placing the script in `/etc/cron.hourly`.", "systemd timers, by creating a `.timer` and a `.service` unit.", "At, by scheduling it with `at now + 15 minutes`."], "correct": 0, "tip": "Cron is the classic scheduler for repetitive tasks. Systemd timers are a more modern alternative." },
      { "id": "rhel_hard_005", "question": "How do you set up network bonding (e.g., Active-Backup mode) on RHEL 7/8 using `nmcli`?", "options": ["nmcli connection add type bond con-name bond0 ifname bond0 mode active-backup; nmcli connection add type ethernet slave-type bond con-name bond0-eth0 ifname eth0 master bond0; nmcli connection add type ethernet slave-type bond con-name bond0-eth1 ifname eth1 master bond0", "ifcfg-bond0, ifcfg-eth0, ifcfg-eth1 files", "ip link add bond0 type bond; ip link set eth0 master bond0; ip link set eth1 master bond0", "bondcfg -a bond0 -m active-backup eth0 eth1"], "correct": 0, "tip": "`nmcli` provides a comprehensive way to configure network connections, including bonding. You create the bond master connection, then add slave connections to it." },
      { "id": "rhel_hard_006", "question": "What is the purpose of `cgroups` in RHEL, and how can you limit CPU usage for a specific service?", "options": ["`cgroups` manage resource allocation. Use `systemd-run --scope -p CPUWeight=100 mycommand` or define `CPUShares` in a service unit.", "`cgroups` manage user authentication. Configure `/etc/passwd`.", "`cgroups` manage firewall rules. Use `firewall-cmd`.", "`cgroups` manage package dependencies. Use `yum`."], "correct": 0, "tip": "Control Groups (`cgroups`) are a Linux kernel feature that limits, accounts for, and isolates resource usage (CPU, memory, disk I/O, network, etc.) of a collection of processes. Systemd integrates heavily with cgroups for resource management." },
      { "id": "rhel_hard_007", "question": "You suspect a performance issue due to excessive I/O. Which RHEL utility would you use to diagnose this, and what key metrics would you look for?", "options": ["`iostat` or `dstat`. Look for `%util` (device utilization), `await` (average wait time), `svctm` (service time), `r/s`, `w/s` (reads/writes per second).", "`top`. Look for CPU usage.", "`free -m`. Look for free memory.", "`netstat`. Look for network errors."], "correct": 0, "tip": "`iostat` (from the `sysstat` package) is excellent for monitoring device I/O. High `%util` and `await` values often indicate I/O bottlenecks." },
      { "id": "rhel_hard_008", "question": "Explain the role of `tuned` in RHEL and how you would apply a specific profile.", "options": ["`tuned` is a dynamic adaptive system tuning daemon. Use `tuned-adm profile <profile_name>` to apply a profile (e.g., `tuned-adm profile throughput-performance`).", "`tuned` is for network configuration. Use `nmcli`.", "`tuned` manages user accounts. Use `useradd`.", "`tuned` is a firewall. Use `firewall-cmd`."], "correct": 0, "tip": "`tuned` optimizes system performance for specific workloads by adjusting various system parameters. It offers pre-defined profiles for common use cases." },
      { "id": "rhel_hard_009", "question": "How do you manage software repositories in RHEL 7/8 using `yum` or `dnf`?", "options": ["Add/modify `.repo` files in `/etc/yum.repos.d/` (or `/etc/dnf/repos.d/`), then use `yum/dnf repolist` and `yum/dnf install`.", "Edit `/etc/apt/sources.list`.", "Use `rpm -i` to add repositories.", "Run `config-manager add-repo`."], "correct": 0, "tip": "Repository configurations for `yum` (RHEL 7) and `dnf` (RHEL 8+) are stored in `.repo` files, which define the URLs and other details for accessing package repositories." },
      { "id": "rhel_hard_010", "question": "You need to configure a static IP address for an interface `eth0` on a RHEL 8 system. What are the `nmcli` commands you would use?", "options": ["nmcli con mod eth0 ipv4.addresses 192.168.1.10/24 ipv4.gateway 192.168.1.1 ipv4.dns 8.8.8.8 ipv4.method manual; nmcli con up eth0", "ifconfig eth0 192.168.1.10 netmask 255.255.255.0 up", "edit /etc/sysconfig/network-scripts/ifcfg-eth0", "ip addr add 192.168.1.10/24 dev eth0"], "correct": 0, "tip": "`nmcli con mod` is used to modify existing connection profiles. For static IP, set the `ipv4.method` to `manual` and define `ipv4.addresses`, `ipv4.gateway`, and `ipv4.dns`." }
    ]
  }
}
